android.app.AppOpsManager->finishProxyOp(java.lang.String,android.content.AttributionSource,boolean)
android.app.AppOpsManager->startProxyOpNoThrow(int,android.content.AttributionSource,java.lang.String,boolean,int,int,int)
android.app.AppOpsManagerInternal$CheckOpsDelegate->finishProxyOperation(int,android.content.AttributionSource,boolean,com.android.internal.util.function.TriFunction)
android.app.AppOpsManagerInternal$CheckOpsDelegate->startProxyOperation(int,android.content.AttributionSource,boolean,boolean,java.lang.String,boolean,boolean,int,int,int,com.android.internal.util.function.DecFunction)
android.app.appsearch.aidl.AppSearchBatchResultParcel-><init>(android.os.Parcel,android.app.appsearch.aidl.AppSearchBatchResultParcel-IA)
android.app.appsearch.aidl.AppSearchResultParcel-><init>(android.os.Parcel,android.app.appsearch.aidl.AppSearchResultParcel-IA)
android.app.appsearch.aidl.DocumentsParcel-><init>(android.os.Parcel,android.app.appsearch.aidl.DocumentsParcel-IA)
android.bluetooth.BluetoothCodecConfig-><init>(android.os.Parcel,android.bluetooth.BluetoothCodecConfig-IA)
android.bluetooth.BluetoothLeAudioCodecConfig-><init>(int,int,int,int,int,int,int,int,int)
android.bluetooth.BluetoothLeAudioCodecConfig-><init>(int,int,int,int,int,int,int,int,int,android.bluetooth.BluetoothLeAudioCodecConfig-IA)
android.bluetooth.IBluetooth$Default->allowLowLatencyAudio(boolean,android.bluetooth.BluetoothDevice,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->canBondWithoutDialog(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->cancelBondProcess(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->cancelDiscovery(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->connectAllEnabledProfiles(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->createBond(android.bluetooth.BluetoothDevice,int,android.bluetooth.OobData,android.bluetooth.OobData,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->disable(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->disconnectAllEnabledProfiles(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->enable(boolean,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->factoryReset(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->fetchRemoteUuidsWithAttribution(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->generateLocalOobData(int,android.bluetooth.IBluetoothOobDataCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->getActiveDevices(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->getAdapterConnectionState(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->getAddressWithAttribution(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->getBatteryLevel(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->getBluetoothClass(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->getBondState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->getBondedDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->getConnectionStateWithAttribution(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->getDiscoverableTimeout(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->getDiscoveryEndMillis(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->getIdentityAddress(java.lang.String,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->getIoCapability(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->getLeIoCapability(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->getLeMaximumAdvertisingDataLength(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->getMaxConnectedAudioDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->getMessageAccessPermission(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->getMetadata(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->getMostRecentlyConnectedDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->getName(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->getNameLengthForAdvertise(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->getPhonebookAccessPermission(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->getProfileConnectionState(int,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->getRemoteAliasWithAttribution(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->getRemoteClass(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->getRemoteName(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->getRemoteType(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->getRemoteUuids(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->getScanMode(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->getSilenceMode(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->getSimAccessPermission(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->getState(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->getSupportedProfiles(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->getUuids(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->isActivityAndEnergyReportingSupported(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->isBondingInitiatedLocally(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->isDiscovering(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->isLe2MPhySupported(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->isLeAudioBroadcastAssistantSupported(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->isLeAudioBroadcastSourceSupported(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->isLeAudioSupported(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->isLeCodedPhySupported(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->isLeExtendedAdvertisingSupported(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->isLePeriodicAdvertisingSupported(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->isMultiAdvertisementSupported(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->isOffloadedFilteringSupported(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->isOffloadedScanBatchingSupported(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->onBrEdrDown(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->onLeServiceUp(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->registerBluetoothConnectionCallback(android.bluetooth.IBluetoothConnectionCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->registerCallback(android.bluetooth.IBluetoothCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->registerMetadataListener(android.bluetooth.IBluetoothMetadataListener,android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->removeActiveDevice(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->removeBond(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->reportActivityInfo(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->retrievePendingSocketForServiceRecord(android.os.ParcelUuid,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->sdpSearch(android.bluetooth.BluetoothDevice,android.os.ParcelUuid,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->setActiveDevice(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->setBluetoothClass(android.bluetooth.BluetoothClass,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->setDiscoverableTimeout(long,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->setIoCapability(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->setLeIoCapability(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->setMessageAccessPermission(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->setMetadata(android.bluetooth.BluetoothDevice,int,byte[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->setName(java.lang.String,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->setPairingConfirmation(android.bluetooth.BluetoothDevice,boolean,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->setPasskey(android.bluetooth.BluetoothDevice,boolean,int,byte[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->setPhonebookAccessPermission(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->setPin(android.bluetooth.BluetoothDevice,boolean,int,byte[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->setRemoteAlias(android.bluetooth.BluetoothDevice,java.lang.String,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->setScanMode(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->setSilenceMode(android.bluetooth.BluetoothDevice,boolean,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->setSimAccessPermission(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->startDiscovery(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->startRfcommListener(java.lang.String,android.os.ParcelUuid,android.app.PendingIntent,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->stopRfcommListener(android.os.ParcelUuid,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->unregisterBluetoothConnectionCallback(android.bluetooth.IBluetoothConnectionCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->unregisterCallback(android.bluetooth.IBluetoothCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Default->unregisterMetadataListener(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->allowLowLatencyAudio(boolean,android.bluetooth.BluetoothDevice,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->canBondWithoutDialog(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->cancelBondProcess(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->cancelDiscovery(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->connectAllEnabledProfiles(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->createBond(android.bluetooth.BluetoothDevice,int,android.bluetooth.OobData,android.bluetooth.OobData,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->disable(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->disconnectAllEnabledProfiles(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->enable(boolean,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->factoryReset(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->fetchRemoteUuidsWithAttribution(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->generateLocalOobData(int,android.bluetooth.IBluetoothOobDataCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->getActiveDevices(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->getAdapterConnectionState(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->getAddressWithAttribution(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->getBatteryLevel(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->getBluetoothClass(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->getBondState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->getBondedDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->getConnectionStateWithAttribution(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->getDiscoverableTimeout(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->getDiscoveryEndMillis(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->getIdentityAddress(java.lang.String,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->getIoCapability(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->getLeIoCapability(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->getLeMaximumAdvertisingDataLength(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->getMaxConnectedAudioDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->getMessageAccessPermission(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->getMetadata(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->getMostRecentlyConnectedDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->getName(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->getNameLengthForAdvertise(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->getPhonebookAccessPermission(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->getProfileConnectionState(int,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->getRemoteAliasWithAttribution(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->getRemoteClass(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->getRemoteName(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->getRemoteType(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->getRemoteUuids(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->getScanMode(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->getSilenceMode(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->getSimAccessPermission(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->getState(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->getSupportedProfiles(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->getUuids(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->isActivityAndEnergyReportingSupported(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->isBondingInitiatedLocally(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->isDiscovering(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->isLe2MPhySupported(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->isLeAudioBroadcastAssistantSupported(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->isLeAudioBroadcastSourceSupported(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->isLeAudioSupported(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->isLeCodedPhySupported(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->isLeExtendedAdvertisingSupported(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->isLePeriodicAdvertisingSupported(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->isMultiAdvertisementSupported(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->isOffloadedFilteringSupported(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->isOffloadedScanBatchingSupported(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->onBrEdrDown(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->onLeServiceUp(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->registerBluetoothConnectionCallback(android.bluetooth.IBluetoothConnectionCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->registerCallback(android.bluetooth.IBluetoothCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->registerMetadataListener(android.bluetooth.IBluetoothMetadataListener,android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->removeActiveDevice(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->removeBond(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->reportActivityInfo(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->retrievePendingSocketForServiceRecord(android.os.ParcelUuid,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->sdpSearch(android.bluetooth.BluetoothDevice,android.os.ParcelUuid,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->setActiveDevice(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->setBluetoothClass(android.bluetooth.BluetoothClass,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->setDiscoverableTimeout(long,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->setIoCapability(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->setLeIoCapability(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->setMessageAccessPermission(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->setMetadata(android.bluetooth.BluetoothDevice,int,byte[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->setName(java.lang.String,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->setPairingConfirmation(android.bluetooth.BluetoothDevice,boolean,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->setPasskey(android.bluetooth.BluetoothDevice,boolean,int,byte[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->setPhonebookAccessPermission(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->setPin(android.bluetooth.BluetoothDevice,boolean,int,byte[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->setRemoteAlias(android.bluetooth.BluetoothDevice,java.lang.String,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->setScanMode(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->setSilenceMode(android.bluetooth.BluetoothDevice,boolean,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->setSimAccessPermission(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->startDiscovery(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->startRfcommListener(java.lang.String,android.os.ParcelUuid,android.app.PendingIntent,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->stopRfcommListener(android.os.ParcelUuid,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->unregisterBluetoothConnectionCallback(android.bluetooth.IBluetoothConnectionCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->unregisterCallback(android.bluetooth.IBluetoothCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth$Stub$Proxy->unregisterMetadataListener(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->allowLowLatencyAudio(boolean,android.bluetooth.BluetoothDevice,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->canBondWithoutDialog(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->cancelBondProcess(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->cancelDiscovery(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->connectAllEnabledProfiles(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->createBond(android.bluetooth.BluetoothDevice,int,android.bluetooth.OobData,android.bluetooth.OobData,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->disable(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->disconnectAllEnabledProfiles(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->enable(boolean,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->factoryReset(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->fetchRemoteUuidsWithAttribution(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->generateLocalOobData(int,android.bluetooth.IBluetoothOobDataCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->getActiveDevices(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->getAdapterConnectionState(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->getAddressWithAttribution(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->getBatteryLevel(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->getBluetoothClass(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->getBondState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->getBondedDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->getConnectionStateWithAttribution(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->getDiscoverableTimeout(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->getDiscoveryEndMillis(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->getIdentityAddress(java.lang.String,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->getIoCapability(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->getLeIoCapability(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->getLeMaximumAdvertisingDataLength(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->getMaxConnectedAudioDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->getMessageAccessPermission(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->getMetadata(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->getMostRecentlyConnectedDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->getName(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->getNameLengthForAdvertise(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->getPhonebookAccessPermission(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->getProfileConnectionState(int,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->getRemoteAliasWithAttribution(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->getRemoteClass(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->getRemoteName(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->getRemoteType(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->getRemoteUuids(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->getScanMode(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->getSilenceMode(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->getSimAccessPermission(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->getState(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->getSupportedProfiles(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->getUuids(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->isActivityAndEnergyReportingSupported(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->isBondingInitiatedLocally(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->isDiscovering(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->isLe2MPhySupported(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->isLeAudioBroadcastAssistantSupported(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->isLeAudioBroadcastSourceSupported(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->isLeAudioSupported(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->isLeCodedPhySupported(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->isLeExtendedAdvertisingSupported(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->isLePeriodicAdvertisingSupported(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->isMultiAdvertisementSupported(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->isOffloadedFilteringSupported(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->isOffloadedScanBatchingSupported(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->onBrEdrDown(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->onLeServiceUp(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->registerBluetoothConnectionCallback(android.bluetooth.IBluetoothConnectionCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->registerCallback(android.bluetooth.IBluetoothCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->registerMetadataListener(android.bluetooth.IBluetoothMetadataListener,android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->removeActiveDevice(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->removeBond(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->reportActivityInfo(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->retrievePendingSocketForServiceRecord(android.os.ParcelUuid,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->sdpSearch(android.bluetooth.BluetoothDevice,android.os.ParcelUuid,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->setActiveDevice(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->setBluetoothClass(android.bluetooth.BluetoothClass,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->setDiscoverableTimeout(long,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->setIoCapability(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->setLeIoCapability(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->setMessageAccessPermission(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->setMetadata(android.bluetooth.BluetoothDevice,int,byte[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->setName(java.lang.String,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->setPairingConfirmation(android.bluetooth.BluetoothDevice,boolean,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->setPasskey(android.bluetooth.BluetoothDevice,boolean,int,byte[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->setPhonebookAccessPermission(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->setPin(android.bluetooth.BluetoothDevice,boolean,int,byte[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->setRemoteAlias(android.bluetooth.BluetoothDevice,java.lang.String,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->setScanMode(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->setSilenceMode(android.bluetooth.BluetoothDevice,boolean,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->setSimAccessPermission(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->startDiscovery(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->startRfcommListener(java.lang.String,android.os.ParcelUuid,android.app.PendingIntent,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->stopRfcommListener(android.os.ParcelUuid,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->unregisterBluetoothConnectionCallback(android.bluetooth.IBluetoothConnectionCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->unregisterCallback(android.bluetooth.IBluetoothCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetooth->unregisterMetadataListener(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp$Default->connect(android.bluetooth.BluetoothDevice,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp$Default->connectWithAttribution(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp$Default->disconnect(android.bluetooth.BluetoothDevice,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp$Default->disconnectWithAttribution(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp$Default->getActiveDevice(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp$Default->getBufferConstraints(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp$Default->getCodecStatus(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp$Default->getConnectedDevices(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp$Default->getConnectedDevicesWithAttribution(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp$Default->getConnectionPolicy(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp$Default->getConnectionState(android.bluetooth.BluetoothDevice,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp$Default->getConnectionStateWithAttribution(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp$Default->getDevicesMatchingConnectionStates(int[],com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp$Default->getDevicesMatchingConnectionStatesWithAttribution(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp$Default->getDynamicBufferSupport(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp$Default->isA2dpPlaying(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp$Default->isAvrcpAbsoluteVolumeSupported(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp$Default->isOptionalCodecsEnabled(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp$Default->isOptionalCodecsSupported(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp$Default->setActiveDevice(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp$Default->setBufferLengthMillis(int,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp$Default->setConnectionPolicy(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp$Stub$Proxy->connect(android.bluetooth.BluetoothDevice,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp$Stub$Proxy->connectWithAttribution(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp$Stub$Proxy->disconnect(android.bluetooth.BluetoothDevice,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp$Stub$Proxy->disconnectWithAttribution(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp$Stub$Proxy->getActiveDevice(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp$Stub$Proxy->getBufferConstraints(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp$Stub$Proxy->getCodecStatus(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp$Stub$Proxy->getConnectedDevices(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp$Stub$Proxy->getConnectedDevicesWithAttribution(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp$Stub$Proxy->getConnectionPolicy(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp$Stub$Proxy->getConnectionState(android.bluetooth.BluetoothDevice,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp$Stub$Proxy->getConnectionStateWithAttribution(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp$Stub$Proxy->getDevicesMatchingConnectionStates(int[],com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp$Stub$Proxy->getDevicesMatchingConnectionStatesWithAttribution(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp$Stub$Proxy->getDynamicBufferSupport(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp$Stub$Proxy->isA2dpPlaying(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp$Stub$Proxy->isAvrcpAbsoluteVolumeSupported(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp$Stub$Proxy->isOptionalCodecsEnabled(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp$Stub$Proxy->isOptionalCodecsSupported(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp$Stub$Proxy->setActiveDevice(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp$Stub$Proxy->setBufferLengthMillis(int,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp$Stub$Proxy->setConnectionPolicy(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp->connect(android.bluetooth.BluetoothDevice,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp->connectWithAttribution(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp->disconnect(android.bluetooth.BluetoothDevice,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp->disconnectWithAttribution(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp->getActiveDevice(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp->getBufferConstraints(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp->getCodecStatus(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp->getConnectedDevices(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp->getConnectedDevicesWithAttribution(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp->getConnectionPolicy(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp->getConnectionState(android.bluetooth.BluetoothDevice,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp->getConnectionStateWithAttribution(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp->getDevicesMatchingConnectionStates(int[],com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp->getDevicesMatchingConnectionStatesWithAttribution(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp->getDynamicBufferSupport(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp->isA2dpPlaying(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp->isAvrcpAbsoluteVolumeSupported(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp->isOptionalCodecsEnabled(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp->isOptionalCodecsSupported(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp->setActiveDevice(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp->setBufferLengthMillis(int,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dp->setConnectionPolicy(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dpSink$Default->connect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dpSink$Default->disconnect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dpSink$Default->getAudioConfig(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dpSink$Default->getConnectedDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dpSink$Default->getConnectionPolicy(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dpSink$Default->getConnectionState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dpSink$Default->getDevicesMatchingConnectionStates(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dpSink$Default->isA2dpPlaying(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dpSink$Default->setConnectionPolicy(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dpSink$Stub$Proxy->connect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dpSink$Stub$Proxy->disconnect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dpSink$Stub$Proxy->getAudioConfig(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dpSink$Stub$Proxy->getConnectedDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dpSink$Stub$Proxy->getConnectionPolicy(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dpSink$Stub$Proxy->getConnectionState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dpSink$Stub$Proxy->getDevicesMatchingConnectionStates(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dpSink$Stub$Proxy->isA2dpPlaying(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dpSink$Stub$Proxy->setConnectionPolicy(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dpSink->connect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dpSink->disconnect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dpSink->getAudioConfig(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dpSink->getConnectedDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dpSink->getConnectionPolicy(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dpSink->getConnectionState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dpSink->getDevicesMatchingConnectionStates(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dpSink->isA2dpPlaying(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothA2dpSink->setConnectionPolicy(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothAvrcpController$Default->getConnectedDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothAvrcpController$Default->getConnectionState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothAvrcpController$Default->getDevicesMatchingConnectionStates(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothAvrcpController$Default->getPlayerSettings(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothAvrcpController$Default->sendGroupNavigationCmd(android.bluetooth.BluetoothDevice,int,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothAvrcpController$Default->setPlayerApplicationSetting(android.bluetooth.BluetoothAvrcpPlayerSettings,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothAvrcpController$Stub$Proxy->getConnectedDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothAvrcpController$Stub$Proxy->getConnectionState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothAvrcpController$Stub$Proxy->getDevicesMatchingConnectionStates(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothAvrcpController$Stub$Proxy->getPlayerSettings(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothAvrcpController$Stub$Proxy->sendGroupNavigationCmd(android.bluetooth.BluetoothDevice,int,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothAvrcpController$Stub$Proxy->setPlayerApplicationSetting(android.bluetooth.BluetoothAvrcpPlayerSettings,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothAvrcpController->getConnectedDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothAvrcpController->getConnectionState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothAvrcpController->getDevicesMatchingConnectionStates(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothAvrcpController->getPlayerSettings(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothAvrcpController->sendGroupNavigationCmd(android.bluetooth.BluetoothDevice,int,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothAvrcpController->setPlayerApplicationSetting(android.bluetooth.BluetoothAvrcpPlayerSettings,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothBattery$Default->connect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothBattery$Default->disconnect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothBattery$Default->getConnectedDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothBattery$Default->getConnectionPolicy(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothBattery$Default->getConnectionState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothBattery$Default->getDevicesMatchingConnectionStates(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothBattery$Default->setConnectionPolicy(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothBattery$Stub$Proxy->connect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothBattery$Stub$Proxy->disconnect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothBattery$Stub$Proxy->getConnectedDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothBattery$Stub$Proxy->getConnectionPolicy(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothBattery$Stub$Proxy->getConnectionState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothBattery$Stub$Proxy->getDevicesMatchingConnectionStates(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothBattery$Stub$Proxy->setConnectionPolicy(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothBattery->connect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothBattery->disconnect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothBattery->getConnectedDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothBattery->getConnectionPolicy(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothBattery->getConnectionState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothBattery->getDevicesMatchingConnectionStates(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothBattery->setConnectionPolicy(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothCsipSetCoordinator$Default->connect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothCsipSetCoordinator$Default->disconnect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothCsipSetCoordinator$Default->getAllGroupIds(android.os.ParcelUuid,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothCsipSetCoordinator$Default->getConnectedDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothCsipSetCoordinator$Default->getConnectionPolicy(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothCsipSetCoordinator$Default->getConnectionState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothCsipSetCoordinator$Default->getDesiredGroupSize(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothCsipSetCoordinator$Default->getDevicesMatchingConnectionStates(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothCsipSetCoordinator$Default->getGroupUuidMapByDevice(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothCsipSetCoordinator$Default->lockGroup(int,android.bluetooth.IBluetoothCsipSetCoordinatorLockCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothCsipSetCoordinator$Default->setConnectionPolicy(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothCsipSetCoordinator$Default->unlockGroup(android.os.ParcelUuid,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothCsipSetCoordinator$Stub$Proxy->connect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothCsipSetCoordinator$Stub$Proxy->disconnect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothCsipSetCoordinator$Stub$Proxy->getAllGroupIds(android.os.ParcelUuid,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothCsipSetCoordinator$Stub$Proxy->getConnectedDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothCsipSetCoordinator$Stub$Proxy->getConnectionPolicy(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothCsipSetCoordinator$Stub$Proxy->getConnectionState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothCsipSetCoordinator$Stub$Proxy->getDesiredGroupSize(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothCsipSetCoordinator$Stub$Proxy->getDevicesMatchingConnectionStates(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothCsipSetCoordinator$Stub$Proxy->getGroupUuidMapByDevice(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothCsipSetCoordinator$Stub$Proxy->lockGroup(int,android.bluetooth.IBluetoothCsipSetCoordinatorLockCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothCsipSetCoordinator$Stub$Proxy->setConnectionPolicy(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothCsipSetCoordinator$Stub$Proxy->unlockGroup(android.os.ParcelUuid,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothCsipSetCoordinator->connect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothCsipSetCoordinator->disconnect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothCsipSetCoordinator->getAllGroupIds(android.os.ParcelUuid,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothCsipSetCoordinator->getConnectedDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothCsipSetCoordinator->getConnectionPolicy(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothCsipSetCoordinator->getConnectionState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothCsipSetCoordinator->getDesiredGroupSize(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothCsipSetCoordinator->getDevicesMatchingConnectionStates(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothCsipSetCoordinator->getGroupUuidMapByDevice(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothCsipSetCoordinator->lockGroup(int,android.bluetooth.IBluetoothCsipSetCoordinatorLockCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothCsipSetCoordinator->setConnectionPolicy(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothCsipSetCoordinator->unlockGroup(android.os.ParcelUuid,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->addService(int,android.bluetooth.BluetoothGattService,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->beginReliableWrite(int,java.lang.String,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->clearServices(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->clientConnect(int,java.lang.String,boolean,int,boolean,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->clientDisconnect(int,java.lang.String,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->clientReadPhy(int,java.lang.String,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->clientSetPreferredPhy(int,java.lang.String,int,int,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->configureMTU(int,java.lang.String,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->connectionParameterUpdate(int,java.lang.String,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->disconnectAll(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->discoverServiceByUuid(int,java.lang.String,android.os.ParcelUuid,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->discoverServices(int,java.lang.String,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->enableAdvertisingSet(int,boolean,int,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->endReliableWrite(int,java.lang.String,boolean,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->flushPendingBatchResults(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->getDevicesMatchingConnectionStates(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->getOwnAddress(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->leConnectionUpdate(int,java.lang.String,int,int,int,int,int,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->numHwTrackFiltersAvailable(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->readCharacteristic(int,java.lang.String,int,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->readDescriptor(int,java.lang.String,int,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->readRemoteRssi(int,java.lang.String,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->readUsingCharacteristicUuid(int,java.lang.String,android.os.ParcelUuid,int,int,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->refreshDevice(int,java.lang.String,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->registerClient(android.os.ParcelUuid,android.bluetooth.IBluetoothGattCallback,boolean,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->registerForNotification(int,java.lang.String,int,boolean,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->registerScanner(android.bluetooth.le.IScannerCallback,android.os.WorkSource,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->registerServer(android.os.ParcelUuid,android.bluetooth.IBluetoothGattServerCallback,boolean,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->registerSync(android.bluetooth.le.ScanResult,int,int,android.bluetooth.le.IPeriodicAdvertisingCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->removeService(int,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->sendNotification(int,java.lang.String,int,boolean,byte[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->sendResponse(int,java.lang.String,int,int,int,byte[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->serverConnect(int,java.lang.String,boolean,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->serverDisconnect(int,java.lang.String,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->serverReadPhy(int,java.lang.String,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->serverSetPreferredPhy(int,java.lang.String,int,int,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->setAdvertisingData(int,android.bluetooth.le.AdvertiseData,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->setAdvertisingParameters(int,android.bluetooth.le.AdvertisingSetParameters,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->setPeriodicAdvertisingData(int,android.bluetooth.le.AdvertiseData,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->setPeriodicAdvertisingEnable(int,boolean,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->setPeriodicAdvertisingParameters(int,android.bluetooth.le.PeriodicAdvertisingParameters,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->setScanResponseData(int,android.bluetooth.le.AdvertiseData,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->startAdvertisingSet(android.bluetooth.le.AdvertisingSetParameters,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseData,android.bluetooth.le.PeriodicAdvertisingParameters,android.bluetooth.le.AdvertiseData,int,int,android.bluetooth.le.IAdvertisingSetCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->startScan(int,android.bluetooth.le.ScanSettings,java.util.List,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->startScanForIntent(android.app.PendingIntent,android.bluetooth.le.ScanSettings,java.util.List,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->stopAdvertisingSet(android.bluetooth.le.IAdvertisingSetCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->stopScan(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->stopScanForIntent(android.app.PendingIntent,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->transferSetInfo(android.bluetooth.BluetoothDevice,int,int,android.bluetooth.le.IPeriodicAdvertisingCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->transferSync(android.bluetooth.BluetoothDevice,int,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->unregAll(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->unregisterClient(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->unregisterScanner(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->unregisterServer(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->unregisterSync(android.bluetooth.le.IPeriodicAdvertisingCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->writeCharacteristic(int,java.lang.String,int,int,int,byte[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Default->writeDescriptor(int,java.lang.String,int,int,byte[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->addService(int,android.bluetooth.BluetoothGattService,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->beginReliableWrite(int,java.lang.String,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->clearServices(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->clientConnect(int,java.lang.String,boolean,int,boolean,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->clientDisconnect(int,java.lang.String,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->clientReadPhy(int,java.lang.String,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->clientSetPreferredPhy(int,java.lang.String,int,int,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->configureMTU(int,java.lang.String,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->connectionParameterUpdate(int,java.lang.String,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->disconnectAll(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->discoverServiceByUuid(int,java.lang.String,android.os.ParcelUuid,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->discoverServices(int,java.lang.String,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->enableAdvertisingSet(int,boolean,int,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->endReliableWrite(int,java.lang.String,boolean,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->flushPendingBatchResults(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->getDevicesMatchingConnectionStates(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->getOwnAddress(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->leConnectionUpdate(int,java.lang.String,int,int,int,int,int,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->numHwTrackFiltersAvailable(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->readCharacteristic(int,java.lang.String,int,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->readDescriptor(int,java.lang.String,int,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->readRemoteRssi(int,java.lang.String,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->readUsingCharacteristicUuid(int,java.lang.String,android.os.ParcelUuid,int,int,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->refreshDevice(int,java.lang.String,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->registerClient(android.os.ParcelUuid,android.bluetooth.IBluetoothGattCallback,boolean,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->registerForNotification(int,java.lang.String,int,boolean,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->registerScanner(android.bluetooth.le.IScannerCallback,android.os.WorkSource,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->registerServer(android.os.ParcelUuid,android.bluetooth.IBluetoothGattServerCallback,boolean,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->registerSync(android.bluetooth.le.ScanResult,int,int,android.bluetooth.le.IPeriodicAdvertisingCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->removeService(int,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->sendNotification(int,java.lang.String,int,boolean,byte[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->sendResponse(int,java.lang.String,int,int,int,byte[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->serverConnect(int,java.lang.String,boolean,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->serverDisconnect(int,java.lang.String,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->serverReadPhy(int,java.lang.String,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->serverSetPreferredPhy(int,java.lang.String,int,int,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->setAdvertisingData(int,android.bluetooth.le.AdvertiseData,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->setAdvertisingParameters(int,android.bluetooth.le.AdvertisingSetParameters,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->setPeriodicAdvertisingData(int,android.bluetooth.le.AdvertiseData,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->setPeriodicAdvertisingEnable(int,boolean,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->setPeriodicAdvertisingParameters(int,android.bluetooth.le.PeriodicAdvertisingParameters,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->setScanResponseData(int,android.bluetooth.le.AdvertiseData,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->startAdvertisingSet(android.bluetooth.le.AdvertisingSetParameters,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseData,android.bluetooth.le.PeriodicAdvertisingParameters,android.bluetooth.le.AdvertiseData,int,int,android.bluetooth.le.IAdvertisingSetCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->startScan(int,android.bluetooth.le.ScanSettings,java.util.List,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->startScanForIntent(android.app.PendingIntent,android.bluetooth.le.ScanSettings,java.util.List,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->stopAdvertisingSet(android.bluetooth.le.IAdvertisingSetCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->stopScan(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->stopScanForIntent(android.app.PendingIntent,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->transferSetInfo(android.bluetooth.BluetoothDevice,int,int,android.bluetooth.le.IPeriodicAdvertisingCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->transferSync(android.bluetooth.BluetoothDevice,int,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->unregAll(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->unregisterClient(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->unregisterScanner(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->unregisterServer(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->unregisterSync(android.bluetooth.le.IPeriodicAdvertisingCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->writeCharacteristic(int,java.lang.String,int,int,int,byte[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt$Stub$Proxy->writeDescriptor(int,java.lang.String,int,int,byte[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->addService(int,android.bluetooth.BluetoothGattService,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->beginReliableWrite(int,java.lang.String,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->clearServices(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->clientConnect(int,java.lang.String,boolean,int,boolean,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->clientDisconnect(int,java.lang.String,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->clientReadPhy(int,java.lang.String,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->clientSetPreferredPhy(int,java.lang.String,int,int,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->configureMTU(int,java.lang.String,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->connectionParameterUpdate(int,java.lang.String,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->disconnectAll(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->discoverServiceByUuid(int,java.lang.String,android.os.ParcelUuid,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->discoverServices(int,java.lang.String,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->enableAdvertisingSet(int,boolean,int,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->endReliableWrite(int,java.lang.String,boolean,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->flushPendingBatchResults(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->getDevicesMatchingConnectionStates(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->getOwnAddress(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->leConnectionUpdate(int,java.lang.String,int,int,int,int,int,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->numHwTrackFiltersAvailable(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->readCharacteristic(int,java.lang.String,int,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->readDescriptor(int,java.lang.String,int,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->readRemoteRssi(int,java.lang.String,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->readUsingCharacteristicUuid(int,java.lang.String,android.os.ParcelUuid,int,int,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->refreshDevice(int,java.lang.String,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->registerClient(android.os.ParcelUuid,android.bluetooth.IBluetoothGattCallback,boolean,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->registerForNotification(int,java.lang.String,int,boolean,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->registerScanner(android.bluetooth.le.IScannerCallback,android.os.WorkSource,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->registerServer(android.os.ParcelUuid,android.bluetooth.IBluetoothGattServerCallback,boolean,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->registerSync(android.bluetooth.le.ScanResult,int,int,android.bluetooth.le.IPeriodicAdvertisingCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->removeService(int,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->sendNotification(int,java.lang.String,int,boolean,byte[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->sendResponse(int,java.lang.String,int,int,int,byte[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->serverConnect(int,java.lang.String,boolean,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->serverDisconnect(int,java.lang.String,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->serverReadPhy(int,java.lang.String,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->serverSetPreferredPhy(int,java.lang.String,int,int,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->setAdvertisingData(int,android.bluetooth.le.AdvertiseData,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->setAdvertisingParameters(int,android.bluetooth.le.AdvertisingSetParameters,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->setPeriodicAdvertisingData(int,android.bluetooth.le.AdvertiseData,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->setPeriodicAdvertisingEnable(int,boolean,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->setPeriodicAdvertisingParameters(int,android.bluetooth.le.PeriodicAdvertisingParameters,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->setScanResponseData(int,android.bluetooth.le.AdvertiseData,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->startAdvertisingSet(android.bluetooth.le.AdvertisingSetParameters,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseData,android.bluetooth.le.PeriodicAdvertisingParameters,android.bluetooth.le.AdvertiseData,int,int,android.bluetooth.le.IAdvertisingSetCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->startScan(int,android.bluetooth.le.ScanSettings,java.util.List,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->startScanForIntent(android.app.PendingIntent,android.bluetooth.le.ScanSettings,java.util.List,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->stopAdvertisingSet(android.bluetooth.le.IAdvertisingSetCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->stopScan(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->stopScanForIntent(android.app.PendingIntent,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->transferSetInfo(android.bluetooth.BluetoothDevice,int,int,android.bluetooth.le.IPeriodicAdvertisingCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->transferSync(android.bluetooth.BluetoothDevice,int,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->unregAll(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->unregisterClient(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->unregisterScanner(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->unregisterServer(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->unregisterSync(android.bluetooth.le.IPeriodicAdvertisingCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->writeCharacteristic(int,java.lang.String,int,int,int,byte[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothGatt->writeDescriptor(int,java.lang.String,int,int,byte[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHapClient$Default->getActivePresetIndex(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHapClient$Default->getActivePresetInfo(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHapClient$Default->getAllPresetInfo(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHapClient$Default->getConnectedDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHapClient$Default->getConnectionPolicy(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHapClient$Default->getConnectionState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHapClient$Default->getDevicesMatchingConnectionStates(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHapClient$Default->getFeatures(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHapClient$Default->getHapGroup(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHapClient$Default->getPresetInfo(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHapClient$Default->registerCallback(android.bluetooth.IBluetoothHapClientCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHapClient$Default->setConnectionPolicy(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHapClient$Default->unregisterCallback(android.bluetooth.IBluetoothHapClientCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHapClient$Stub$Proxy->getActivePresetIndex(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHapClient$Stub$Proxy->getActivePresetInfo(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHapClient$Stub$Proxy->getAllPresetInfo(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHapClient$Stub$Proxy->getConnectedDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHapClient$Stub$Proxy->getConnectionPolicy(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHapClient$Stub$Proxy->getConnectionState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHapClient$Stub$Proxy->getDevicesMatchingConnectionStates(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHapClient$Stub$Proxy->getFeatures(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHapClient$Stub$Proxy->getHapGroup(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHapClient$Stub$Proxy->getPresetInfo(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHapClient$Stub$Proxy->registerCallback(android.bluetooth.IBluetoothHapClientCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHapClient$Stub$Proxy->setConnectionPolicy(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHapClient$Stub$Proxy->unregisterCallback(android.bluetooth.IBluetoothHapClientCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHapClient->getActivePresetIndex(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHapClient->getActivePresetInfo(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHapClient->getAllPresetInfo(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHapClient->getConnectedDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHapClient->getConnectionPolicy(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHapClient->getConnectionState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHapClient->getDevicesMatchingConnectionStates(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHapClient->getFeatures(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHapClient->getHapGroup(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHapClient->getPresetInfo(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHapClient->registerCallback(android.bluetooth.IBluetoothHapClientCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHapClient->setConnectionPolicy(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHapClient->unregisterCallback(android.bluetooth.IBluetoothHapClientCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset$Default->clccResponse(int,int,int,int,boolean,java.lang.String,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset$Default->connectAudio(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset$Default->connectWithAttribution(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset$Default->disconnectAudio(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset$Default->disconnectWithAttribution(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset$Default->getActiveDevice(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset$Default->getAudioRouteAllowed(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset$Default->getAudioState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset$Default->getConnectedDevicesWithAttribution(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset$Default->getConnectionPolicy(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset$Default->getConnectionStateWithAttribution(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset$Default->getDevicesMatchingConnectionStates(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset$Default->isAudioConnected(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset$Default->isAudioOn(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset$Default->isInbandRingingEnabled(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset$Default->isNoiseReductionSupported(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset$Default->isVoiceRecognitionSupported(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset$Default->sendVendorSpecificResultCode(android.bluetooth.BluetoothDevice,java.lang.String,java.lang.String,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset$Default->setActiveDevice(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset$Default->setAudioRouteAllowed(boolean,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset$Default->setConnectionPolicy(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset$Default->setForceScoAudio(boolean,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset$Default->startScoUsingVirtualVoiceCall(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset$Default->startVoiceRecognition(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset$Default->stopScoUsingVirtualVoiceCall(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset$Default->stopVoiceRecognition(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset$Stub$Proxy->clccResponse(int,int,int,int,boolean,java.lang.String,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset$Stub$Proxy->connectAudio(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset$Stub$Proxy->connectWithAttribution(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset$Stub$Proxy->disconnectAudio(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset$Stub$Proxy->disconnectWithAttribution(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset$Stub$Proxy->getActiveDevice(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset$Stub$Proxy->getAudioRouteAllowed(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset$Stub$Proxy->getAudioState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset$Stub$Proxy->getConnectedDevicesWithAttribution(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset$Stub$Proxy->getConnectionPolicy(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset$Stub$Proxy->getConnectionStateWithAttribution(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset$Stub$Proxy->getDevicesMatchingConnectionStates(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset$Stub$Proxy->isAudioConnected(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset$Stub$Proxy->isAudioOn(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset$Stub$Proxy->isInbandRingingEnabled(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset$Stub$Proxy->isNoiseReductionSupported(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset$Stub$Proxy->isVoiceRecognitionSupported(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset$Stub$Proxy->sendVendorSpecificResultCode(android.bluetooth.BluetoothDevice,java.lang.String,java.lang.String,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset$Stub$Proxy->setActiveDevice(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset$Stub$Proxy->setAudioRouteAllowed(boolean,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset$Stub$Proxy->setConnectionPolicy(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset$Stub$Proxy->setForceScoAudio(boolean,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset$Stub$Proxy->startScoUsingVirtualVoiceCall(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset$Stub$Proxy->startVoiceRecognition(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset$Stub$Proxy->stopScoUsingVirtualVoiceCall(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset$Stub$Proxy->stopVoiceRecognition(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset->clccResponse(int,int,int,int,boolean,java.lang.String,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset->connectAudio(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset->connectWithAttribution(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset->disconnectAudio(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset->disconnectWithAttribution(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset->getActiveDevice(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset->getAudioRouteAllowed(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset->getAudioState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset->getConnectedDevicesWithAttribution(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset->getConnectionPolicy(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset->getConnectionStateWithAttribution(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset->getDevicesMatchingConnectionStates(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset->isAudioConnected(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset->isAudioOn(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset->isInbandRingingEnabled(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset->isNoiseReductionSupported(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset->isVoiceRecognitionSupported(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset->sendVendorSpecificResultCode(android.bluetooth.BluetoothDevice,java.lang.String,java.lang.String,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset->setActiveDevice(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset->setAudioRouteAllowed(boolean,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset->setConnectionPolicy(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset->setForceScoAudio(boolean,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset->startScoUsingVirtualVoiceCall(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset->startVoiceRecognition(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset->stopScoUsingVirtualVoiceCall(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadset->stopVoiceRecognition(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient$Default->acceptCall(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient$Default->connect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient$Default->connectAudio(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient$Default->dial(android.bluetooth.BluetoothDevice,java.lang.String,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient$Default->disconnect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient$Default->disconnectAudio(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient$Default->enterPrivateMode(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient$Default->explicitCallTransfer(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient$Default->getAudioRouteAllowed(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient$Default->getAudioState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient$Default->getConnectedDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient$Default->getConnectionPolicy(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient$Default->getConnectionState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient$Default->getCurrentAgEvents(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient$Default->getCurrentAgFeatures(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient$Default->getCurrentCalls(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient$Default->getDevicesMatchingConnectionStates(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient$Default->getLastVoiceTagNumber(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient$Default->holdCall(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient$Default->rejectCall(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient$Default->sendDTMF(android.bluetooth.BluetoothDevice,byte,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient$Default->sendVendorAtCommand(android.bluetooth.BluetoothDevice,int,java.lang.String,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient$Default->setAudioRouteAllowed(android.bluetooth.BluetoothDevice,boolean,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient$Default->setConnectionPolicy(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient$Default->startVoiceRecognition(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient$Default->stopVoiceRecognition(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient$Default->terminateCall(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHeadsetClientCall,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy->acceptCall(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy->connect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy->connectAudio(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy->dial(android.bluetooth.BluetoothDevice,java.lang.String,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy->disconnect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy->disconnectAudio(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy->enterPrivateMode(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy->explicitCallTransfer(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy->getAudioRouteAllowed(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy->getAudioState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy->getConnectedDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy->getConnectionPolicy(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy->getConnectionState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy->getCurrentAgEvents(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy->getCurrentAgFeatures(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy->getCurrentCalls(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy->getDevicesMatchingConnectionStates(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy->getLastVoiceTagNumber(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy->holdCall(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy->rejectCall(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy->sendDTMF(android.bluetooth.BluetoothDevice,byte,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy->sendVendorAtCommand(android.bluetooth.BluetoothDevice,int,java.lang.String,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy->setAudioRouteAllowed(android.bluetooth.BluetoothDevice,boolean,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy->setConnectionPolicy(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy->startVoiceRecognition(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy->stopVoiceRecognition(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient$Stub$Proxy->terminateCall(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHeadsetClientCall,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient->acceptCall(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient->connect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient->connectAudio(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient->dial(android.bluetooth.BluetoothDevice,java.lang.String,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient->disconnect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient->disconnectAudio(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient->enterPrivateMode(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient->explicitCallTransfer(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient->getAudioRouteAllowed(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient->getAudioState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient->getConnectedDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient->getConnectionPolicy(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient->getConnectionState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient->getCurrentAgEvents(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient->getCurrentAgFeatures(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient->getCurrentCalls(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient->getDevicesMatchingConnectionStates(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient->getLastVoiceTagNumber(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient->holdCall(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient->rejectCall(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient->sendDTMF(android.bluetooth.BluetoothDevice,byte,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient->sendVendorAtCommand(android.bluetooth.BluetoothDevice,int,java.lang.String,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient->setAudioRouteAllowed(android.bluetooth.BluetoothDevice,boolean,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient->setConnectionPolicy(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient->startVoiceRecognition(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient->stopVoiceRecognition(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHeadsetClient->terminateCall(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHeadsetClientCall,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHearingAid$Default->connect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHearingAid$Default->disconnect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHearingAid$Default->getActiveDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHearingAid$Default->getConnectedDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHearingAid$Default->getConnectionPolicy(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHearingAid$Default->getConnectionState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHearingAid$Default->getDeviceMode(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHearingAid$Default->getDeviceSide(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHearingAid$Default->getDevicesMatchingConnectionStates(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHearingAid$Default->getHiSyncId(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHearingAid$Default->setActiveDevice(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHearingAid$Default->setConnectionPolicy(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHearingAid$Default->setVolume(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHearingAid$Stub$Proxy->connect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHearingAid$Stub$Proxy->disconnect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHearingAid$Stub$Proxy->getActiveDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHearingAid$Stub$Proxy->getConnectedDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHearingAid$Stub$Proxy->getConnectionPolicy(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHearingAid$Stub$Proxy->getConnectionState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHearingAid$Stub$Proxy->getDeviceMode(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHearingAid$Stub$Proxy->getDeviceSide(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHearingAid$Stub$Proxy->getDevicesMatchingConnectionStates(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHearingAid$Stub$Proxy->getHiSyncId(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHearingAid$Stub$Proxy->setActiveDevice(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHearingAid$Stub$Proxy->setConnectionPolicy(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHearingAid$Stub$Proxy->setVolume(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHearingAid->connect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHearingAid->disconnect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHearingAid->getActiveDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHearingAid->getConnectedDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHearingAid->getConnectionPolicy(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHearingAid->getConnectionState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHearingAid->getDeviceMode(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHearingAid->getDeviceSide(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHearingAid->getDevicesMatchingConnectionStates(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHearingAid->getHiSyncId(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHearingAid->setActiveDevice(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHearingAid->setConnectionPolicy(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHearingAid->setVolume(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidDevice$Default->connect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidDevice$Default->disconnect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidDevice$Default->getConnectedDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidDevice$Default->getConnectionState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidDevice$Default->getDevicesMatchingConnectionStates(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidDevice$Default->getUserAppName(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidDevice$Default->registerApp(android.bluetooth.BluetoothHidDeviceAppSdpSettings,android.bluetooth.BluetoothHidDeviceAppQosSettings,android.bluetooth.BluetoothHidDeviceAppQosSettings,android.bluetooth.IBluetoothHidDeviceCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidDevice$Default->replyReport(android.bluetooth.BluetoothDevice,byte,byte,byte[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidDevice$Default->reportError(android.bluetooth.BluetoothDevice,byte,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidDevice$Default->sendReport(android.bluetooth.BluetoothDevice,int,byte[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidDevice$Default->setConnectionPolicy(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidDevice$Default->unplug(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidDevice$Default->unregisterApp(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidDevice$Stub$Proxy->connect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidDevice$Stub$Proxy->disconnect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidDevice$Stub$Proxy->getConnectedDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidDevice$Stub$Proxy->getConnectionState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidDevice$Stub$Proxy->getDevicesMatchingConnectionStates(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidDevice$Stub$Proxy->getUserAppName(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidDevice$Stub$Proxy->registerApp(android.bluetooth.BluetoothHidDeviceAppSdpSettings,android.bluetooth.BluetoothHidDeviceAppQosSettings,android.bluetooth.BluetoothHidDeviceAppQosSettings,android.bluetooth.IBluetoothHidDeviceCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidDevice$Stub$Proxy->replyReport(android.bluetooth.BluetoothDevice,byte,byte,byte[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidDevice$Stub$Proxy->reportError(android.bluetooth.BluetoothDevice,byte,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidDevice$Stub$Proxy->sendReport(android.bluetooth.BluetoothDevice,int,byte[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidDevice$Stub$Proxy->setConnectionPolicy(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidDevice$Stub$Proxy->unplug(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidDevice$Stub$Proxy->unregisterApp(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidDevice->connect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidDevice->disconnect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidDevice->getConnectedDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidDevice->getConnectionState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidDevice->getDevicesMatchingConnectionStates(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidDevice->getUserAppName(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidDevice->registerApp(android.bluetooth.BluetoothHidDeviceAppSdpSettings,android.bluetooth.BluetoothHidDeviceAppQosSettings,android.bluetooth.BluetoothHidDeviceAppQosSettings,android.bluetooth.IBluetoothHidDeviceCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidDevice->replyReport(android.bluetooth.BluetoothDevice,byte,byte,byte[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidDevice->reportError(android.bluetooth.BluetoothDevice,byte,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidDevice->sendReport(android.bluetooth.BluetoothDevice,int,byte[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidDevice->setConnectionPolicy(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidDevice->unplug(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidDevice->unregisterApp(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidHost$Default->connect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidHost$Default->disconnect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidHost$Default->getConnectedDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidHost$Default->getConnectionPolicy(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidHost$Default->getConnectionState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidHost$Default->getDevicesMatchingConnectionStates(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidHost$Default->getIdleTime(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidHost$Default->getProtocolMode(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidHost$Default->getReport(android.bluetooth.BluetoothDevice,byte,byte,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidHost$Default->sendData(android.bluetooth.BluetoothDevice,java.lang.String,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidHost$Default->setConnectionPolicy(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidHost$Default->setIdleTime(android.bluetooth.BluetoothDevice,byte,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidHost$Default->setProtocolMode(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidHost$Default->setReport(android.bluetooth.BluetoothDevice,byte,java.lang.String,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidHost$Default->virtualUnplug(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidHost$Stub$Proxy->connect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidHost$Stub$Proxy->disconnect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidHost$Stub$Proxy->getConnectedDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidHost$Stub$Proxy->getConnectionPolicy(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidHost$Stub$Proxy->getConnectionState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidHost$Stub$Proxy->getDevicesMatchingConnectionStates(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidHost$Stub$Proxy->getIdleTime(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidHost$Stub$Proxy->getProtocolMode(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidHost$Stub$Proxy->getReport(android.bluetooth.BluetoothDevice,byte,byte,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidHost$Stub$Proxy->sendData(android.bluetooth.BluetoothDevice,java.lang.String,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidHost$Stub$Proxy->setConnectionPolicy(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidHost$Stub$Proxy->setIdleTime(android.bluetooth.BluetoothDevice,byte,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidHost$Stub$Proxy->setProtocolMode(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidHost$Stub$Proxy->setReport(android.bluetooth.BluetoothDevice,byte,java.lang.String,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidHost$Stub$Proxy->virtualUnplug(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidHost->connect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidHost->disconnect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidHost->getConnectedDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidHost->getConnectionPolicy(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidHost->getConnectionState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidHost->getDevicesMatchingConnectionStates(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidHost->getIdleTime(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidHost->getProtocolMode(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidHost->getReport(android.bluetooth.BluetoothDevice,byte,byte,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidHost->sendData(android.bluetooth.BluetoothDevice,java.lang.String,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidHost->setConnectionPolicy(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidHost->setIdleTime(android.bluetooth.BluetoothDevice,byte,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidHost->setProtocolMode(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidHost->setReport(android.bluetooth.BluetoothDevice,byte,java.lang.String,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothHidHost->virtualUnplug(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio$Default->connect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio$Default->disconnect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio$Default->getActiveDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio$Default->getAllBroadcastMetadata(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio$Default->getAudioLocation(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio$Default->getCodecStatus(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio$Default->getConnectedDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio$Default->getConnectedGroupLeadDevice(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio$Default->getConnectionPolicy(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio$Default->getConnectionState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio$Default->getDevicesMatchingConnectionStates(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio$Default->getGroupId(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio$Default->getMaximumNumberOfBroadcasts(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio$Default->groupAddNode(int,android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio$Default->groupRemoveNode(int,android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio$Default->isPlaying(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio$Default->registerCallback(android.bluetooth.IBluetoothLeAudioCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio$Default->registerLeBroadcastCallback(android.bluetooth.IBluetoothLeBroadcastCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio$Default->setActiveDevice(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio$Default->setCcidInformation(android.os.ParcelUuid,int,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio$Default->setConnectionPolicy(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio$Default->setVolume(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio$Default->unregisterCallback(android.bluetooth.IBluetoothLeAudioCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio$Default->unregisterLeBroadcastCallback(android.bluetooth.IBluetoothLeBroadcastCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio$Stub$Proxy->connect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio$Stub$Proxy->disconnect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio$Stub$Proxy->getActiveDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio$Stub$Proxy->getAllBroadcastMetadata(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio$Stub$Proxy->getAudioLocation(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio$Stub$Proxy->getCodecStatus(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio$Stub$Proxy->getConnectedDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio$Stub$Proxy->getConnectedGroupLeadDevice(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio$Stub$Proxy->getConnectionPolicy(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio$Stub$Proxy->getConnectionState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio$Stub$Proxy->getDevicesMatchingConnectionStates(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio$Stub$Proxy->getGroupId(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio$Stub$Proxy->getMaximumNumberOfBroadcasts(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio$Stub$Proxy->groupAddNode(int,android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio$Stub$Proxy->groupRemoveNode(int,android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio$Stub$Proxy->isPlaying(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio$Stub$Proxy->registerCallback(android.bluetooth.IBluetoothLeAudioCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio$Stub$Proxy->registerLeBroadcastCallback(android.bluetooth.IBluetoothLeBroadcastCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio$Stub$Proxy->setActiveDevice(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio$Stub$Proxy->setCcidInformation(android.os.ParcelUuid,int,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio$Stub$Proxy->setConnectionPolicy(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio$Stub$Proxy->setVolume(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio$Stub$Proxy->unregisterCallback(android.bluetooth.IBluetoothLeAudioCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio$Stub$Proxy->unregisterLeBroadcastCallback(android.bluetooth.IBluetoothLeBroadcastCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio->connect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio->disconnect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio->getActiveDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio->getAllBroadcastMetadata(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio->getAudioLocation(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio->getCodecStatus(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio->getConnectedDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio->getConnectedGroupLeadDevice(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio->getConnectionPolicy(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio->getConnectionState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio->getDevicesMatchingConnectionStates(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio->getGroupId(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio->getMaximumNumberOfBroadcasts(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio->groupAddNode(int,android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio->groupRemoveNode(int,android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio->isPlaying(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio->registerCallback(android.bluetooth.IBluetoothLeAudioCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio->registerLeBroadcastCallback(android.bluetooth.IBluetoothLeBroadcastCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio->setActiveDevice(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio->setCcidInformation(android.os.ParcelUuid,int,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio->setConnectionPolicy(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio->setVolume(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio->unregisterCallback(android.bluetooth.IBluetoothLeAudioCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothLeAudio->unregisterLeBroadcastCallback(android.bluetooth.IBluetoothLeBroadcastCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMap$Default->disconnect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMap$Default->getClient(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMap$Default->getConnectedDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMap$Default->getConnectionPolicy(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMap$Default->getConnectionState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMap$Default->getDevicesMatchingConnectionStates(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMap$Default->getState(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMap$Default->isConnected(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMap$Default->setConnectionPolicy(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMap$Stub$Proxy->disconnect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMap$Stub$Proxy->getClient(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMap$Stub$Proxy->getConnectedDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMap$Stub$Proxy->getConnectionPolicy(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMap$Stub$Proxy->getConnectionState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMap$Stub$Proxy->getDevicesMatchingConnectionStates(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMap$Stub$Proxy->getState(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMap$Stub$Proxy->isConnected(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMap$Stub$Proxy->setConnectionPolicy(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMap->disconnect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMap->getClient(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMap->getConnectedDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMap->getConnectionPolicy(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMap->getConnectionState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMap->getDevicesMatchingConnectionStates(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMap->getState(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMap->isConnected(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMap->setConnectionPolicy(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMapClient$Default->connect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMapClient$Default->disconnect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMapClient$Default->getConnectedDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMapClient$Default->getConnectionPolicy(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMapClient$Default->getConnectionState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMapClient$Default->getDevicesMatchingConnectionStates(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMapClient$Default->getSupportedFeatures(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMapClient$Default->getUnreadMessages(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMapClient$Default->isConnected(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMapClient$Default->sendMessage(android.bluetooth.BluetoothDevice,android.net.Uri[],java.lang.String,android.app.PendingIntent,android.app.PendingIntent,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMapClient$Default->setConnectionPolicy(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMapClient$Default->setMessageStatus(android.bluetooth.BluetoothDevice,java.lang.String,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMapClient$Stub$Proxy->connect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMapClient$Stub$Proxy->disconnect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMapClient$Stub$Proxy->getConnectedDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMapClient$Stub$Proxy->getConnectionPolicy(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMapClient$Stub$Proxy->getConnectionState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMapClient$Stub$Proxy->getDevicesMatchingConnectionStates(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMapClient$Stub$Proxy->getSupportedFeatures(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMapClient$Stub$Proxy->getUnreadMessages(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMapClient$Stub$Proxy->isConnected(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMapClient$Stub$Proxy->sendMessage(android.bluetooth.BluetoothDevice,android.net.Uri[],java.lang.String,android.app.PendingIntent,android.app.PendingIntent,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMapClient$Stub$Proxy->setConnectionPolicy(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMapClient$Stub$Proxy->setMessageStatus(android.bluetooth.BluetoothDevice,java.lang.String,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMapClient->connect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMapClient->disconnect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMapClient->getConnectedDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMapClient->getConnectionPolicy(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMapClient->getConnectionState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMapClient->getDevicesMatchingConnectionStates(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMapClient->getSupportedFeatures(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMapClient->getUnreadMessages(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMapClient->isConnected(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMapClient->sendMessage(android.bluetooth.BluetoothDevice,android.net.Uri[],java.lang.String,android.app.PendingIntent,android.app.PendingIntent,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMapClient->setConnectionPolicy(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothMapClient->setMessageStatus(android.bluetooth.BluetoothDevice,java.lang.String,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothPan$Default->connect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothPan$Default->disconnect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothPan$Default->getConnectedDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothPan$Default->getConnectionState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothPan$Default->getDevicesMatchingConnectionStates(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothPan$Default->isTetheringOn(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothPan$Default->setBluetoothTethering(android.bluetooth.IBluetoothPanCallback,int,boolean,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothPan$Default->setConnectionPolicy(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothPan$Stub$Proxy->connect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothPan$Stub$Proxy->disconnect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothPan$Stub$Proxy->getConnectedDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothPan$Stub$Proxy->getConnectionState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothPan$Stub$Proxy->getDevicesMatchingConnectionStates(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothPan$Stub$Proxy->isTetheringOn(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothPan$Stub$Proxy->setBluetoothTethering(android.bluetooth.IBluetoothPanCallback,int,boolean,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothPan$Stub$Proxy->setConnectionPolicy(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothPan->connect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothPan->disconnect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothPan->getConnectedDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothPan->getConnectionState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothPan->getDevicesMatchingConnectionStates(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothPan->isTetheringOn(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothPan->setBluetoothTethering(android.bluetooth.IBluetoothPanCallback,int,boolean,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothPan->setConnectionPolicy(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothPbapClient$Default->connect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothPbapClient$Default->disconnect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothPbapClient$Default->getConnectedDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothPbapClient$Default->getConnectionPolicy(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothPbapClient$Default->getConnectionState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothPbapClient$Default->getDevicesMatchingConnectionStates(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothPbapClient$Default->setConnectionPolicy(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothPbapClient$Stub$Proxy->connect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothPbapClient$Stub$Proxy->disconnect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothPbapClient$Stub$Proxy->getConnectedDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothPbapClient$Stub$Proxy->getConnectionPolicy(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothPbapClient$Stub$Proxy->getConnectionState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothPbapClient$Stub$Proxy->getDevicesMatchingConnectionStates(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothPbapClient$Stub$Proxy->setConnectionPolicy(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothPbapClient->connect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothPbapClient->disconnect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothPbapClient->getConnectedDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothPbapClient->getConnectionPolicy(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothPbapClient->getConnectionState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothPbapClient->getDevicesMatchingConnectionStates(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothPbapClient->setConnectionPolicy(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothSap$Default->disconnect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothSap$Default->getClient(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothSap$Default->getConnectedDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothSap$Default->getConnectionPolicy(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothSap$Default->getConnectionState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothSap$Default->getDevicesMatchingConnectionStates(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothSap$Default->getState(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothSap$Default->isConnected(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothSap$Default->setConnectionPolicy(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothSap$Stub$Proxy->disconnect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothSap$Stub$Proxy->getClient(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothSap$Stub$Proxy->getConnectedDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothSap$Stub$Proxy->getConnectionPolicy(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothSap$Stub$Proxy->getConnectionState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothSap$Stub$Proxy->getDevicesMatchingConnectionStates(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothSap$Stub$Proxy->getState(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothSap$Stub$Proxy->isConnected(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothSap$Stub$Proxy->setConnectionPolicy(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothSap->disconnect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothSap->getClient(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothSap->getConnectedDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothSap->getConnectionPolicy(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothSap->getConnectionState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothSap->getDevicesMatchingConnectionStates(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothSap->getState(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothSap->isConnected(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothSap->setConnectionPolicy(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothVolumeControl$Default->connect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothVolumeControl$Default->disconnect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothVolumeControl$Default->getConnectedDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothVolumeControl$Default->getConnectionPolicy(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothVolumeControl$Default->getConnectionState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothVolumeControl$Default->getDevicesMatchingConnectionStates(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothVolumeControl$Default->isVolumeOffsetAvailable(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothVolumeControl$Default->mute(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothVolumeControl$Default->muteGroup(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothVolumeControl$Default->registerCallback(android.bluetooth.IBluetoothVolumeControlCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothVolumeControl$Default->setConnectionPolicy(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothVolumeControl$Default->setVolumeGroup(int,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothVolumeControl$Default->setVolumeOffset(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothVolumeControl$Default->unmute(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothVolumeControl$Default->unmuteGroup(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothVolumeControl$Default->unregisterCallback(android.bluetooth.IBluetoothVolumeControlCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothVolumeControl$Stub$Proxy->connect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothVolumeControl$Stub$Proxy->disconnect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothVolumeControl$Stub$Proxy->getConnectedDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothVolumeControl$Stub$Proxy->getConnectionPolicy(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothVolumeControl$Stub$Proxy->getConnectionState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothVolumeControl$Stub$Proxy->getDevicesMatchingConnectionStates(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothVolumeControl$Stub$Proxy->isVolumeOffsetAvailable(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothVolumeControl$Stub$Proxy->mute(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothVolumeControl$Stub$Proxy->muteGroup(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothVolumeControl$Stub$Proxy->registerCallback(android.bluetooth.IBluetoothVolumeControlCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothVolumeControl$Stub$Proxy->setConnectionPolicy(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothVolumeControl$Stub$Proxy->setVolumeGroup(int,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothVolumeControl$Stub$Proxy->setVolumeOffset(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothVolumeControl$Stub$Proxy->unmute(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothVolumeControl$Stub$Proxy->unmuteGroup(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothVolumeControl$Stub$Proxy->unregisterCallback(android.bluetooth.IBluetoothVolumeControlCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothVolumeControl->connect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothVolumeControl->disconnect(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothVolumeControl->getConnectedDevices(android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothVolumeControl->getConnectionPolicy(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothVolumeControl->getConnectionState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothVolumeControl->getDevicesMatchingConnectionStates(int[],android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothVolumeControl->isVolumeOffsetAvailable(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothVolumeControl->mute(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothVolumeControl->muteGroup(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothVolumeControl->registerCallback(android.bluetooth.IBluetoothVolumeControlCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothVolumeControl->setConnectionPolicy(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothVolumeControl->setVolumeGroup(int,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothVolumeControl->setVolumeOffset(android.bluetooth.BluetoothDevice,int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothVolumeControl->unmute(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothVolumeControl->unmuteGroup(int,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.IBluetoothVolumeControl->unregisterCallback(android.bluetooth.IBluetoothVolumeControlCallback,android.content.AttributionSource,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
android.bluetooth.le.ScanFilter-><init>(java.lang.String,java.lang.String,android.os.ParcelUuid,android.os.ParcelUuid,android.os.ParcelUuid,android.os.ParcelUuid,android.os.ParcelUuid,byte[],byte[],int,byte[],byte[],int,byte[],int,byte[],byte[])
android.bluetooth.le.ScanFilter-><init>(java.lang.String,java.lang.String,android.os.ParcelUuid,android.os.ParcelUuid,android.os.ParcelUuid,android.os.ParcelUuid,android.os.ParcelUuid,byte[],byte[],int,byte[],byte[],int,byte[],int,byte[],byte[],android.bluetooth.le.ScanFilter-IA)
android.bluetooth.le.ScanRecord-><init>(java.util.List,java.util.List,android.util.SparseArray,java.util.Map,int,int,java.lang.String,java.util.HashMap,byte[])
android.media.ExifInterface->getHeifAttributes(android.media.ExifInterface$ByteOrderedDataInputStream)
android.media.ExifInterface->loadAttributes(java.io.InputStream)
android.net.ConnectivityManager$CallbackHandler-><init>(android.net.ConnectivityManager,android.os.Handler)
android.net.ConnectivityManager$CallbackHandler-><init>(android.net.ConnectivityManager,android.os.Looper)
android.net.wifi.SoftApConfiguration-><init>(android.net.wifi.WifiSsid,android.net.MacAddress,java.lang.String,boolean,android.util.SparseIntArray,int,int,boolean,long,boolean,java.util.List,java.util.List,int,boolean,boolean,boolean,boolean,long,java.util.List,android.net.MacAddress,java.util.Set,java.util.Set,java.util.Set,int)
android.net.wifi.SoftApConfiguration-><init>(android.net.wifi.WifiSsid,android.net.MacAddress,java.lang.String,boolean,android.util.SparseIntArray,int,int,boolean,long,boolean,java.util.List,java.util.List,int,boolean,boolean,boolean,boolean,long,java.util.List,android.net.MacAddress,java.util.Set,java.util.Set,java.util.Set,int,android.net.wifi.SoftApConfiguration-IA)
android.window.TaskFragmentOrganizer->putExceptionInBundle(java.lang.Throwable)
com.android.bluetooth.x.android.sysprop.AdbProperties-><init>()
com.android.bluetooth.x.android.sysprop.AdbProperties->escape(java.lang.String)
com.android.bluetooth.x.android.sysprop.AdbProperties->formatEnumList(java.util.List,java.util.function.Function)
com.android.bluetooth.x.android.sysprop.AdbProperties->formatList(java.util.List)
com.android.bluetooth.x.android.sysprop.AdbProperties->formatUIntList(java.util.List)
com.android.bluetooth.x.android.sysprop.AdbProperties->formatULongList(java.util.List)
com.android.bluetooth.x.android.sysprop.AdbProperties->tryParseBoolean(java.lang.String)
com.android.bluetooth.x.android.sysprop.AdbProperties->tryParseDouble(java.lang.String)
com.android.bluetooth.x.android.sysprop.AdbProperties->tryParseEnum(java.lang.Class,java.lang.String)
com.android.bluetooth.x.android.sysprop.AdbProperties->tryParseEnumList(java.lang.Class,java.lang.String)
com.android.bluetooth.x.android.sysprop.AdbProperties->tryParseInteger(java.lang.String)
com.android.bluetooth.x.android.sysprop.AdbProperties->tryParseList(java.util.function.Function,java.lang.String)
com.android.bluetooth.x.android.sysprop.AdbProperties->tryParseLong(java.lang.String)
com.android.bluetooth.x.android.sysprop.AdbProperties->tryParseString(java.lang.String)
com.android.bluetooth.x.android.sysprop.AdbProperties->tryParseUInt(java.lang.String)
com.android.bluetooth.x.android.sysprop.AdbProperties->tryParseULong(java.lang.String)
com.android.bluetooth.x.android.sysprop.ApkVerityProperties-><init>()
com.android.bluetooth.x.android.sysprop.ApkVerityProperties->apk_verity_mode()
com.android.bluetooth.x.android.sysprop.ApkVerityProperties->apk_verity_mode(java.lang.Integer)
com.android.bluetooth.x.android.sysprop.ApkVerityProperties->escape(java.lang.String)
com.android.bluetooth.x.android.sysprop.ApkVerityProperties->formatEnumList(java.util.List,java.util.function.Function)
com.android.bluetooth.x.android.sysprop.ApkVerityProperties->formatList(java.util.List)
com.android.bluetooth.x.android.sysprop.ApkVerityProperties->formatUIntList(java.util.List)
com.android.bluetooth.x.android.sysprop.ApkVerityProperties->formatULongList(java.util.List)
com.android.bluetooth.x.android.sysprop.ApkVerityProperties->tryParseBoolean(java.lang.String)
com.android.bluetooth.x.android.sysprop.ApkVerityProperties->tryParseDouble(java.lang.String)
com.android.bluetooth.x.android.sysprop.ApkVerityProperties->tryParseEnum(java.lang.Class,java.lang.String)
com.android.bluetooth.x.android.sysprop.ApkVerityProperties->tryParseEnumList(java.lang.Class,java.lang.String)
com.android.bluetooth.x.android.sysprop.ApkVerityProperties->tryParseInteger(java.lang.String)
com.android.bluetooth.x.android.sysprop.ApkVerityProperties->tryParseList(java.util.function.Function,java.lang.String)
com.android.bluetooth.x.android.sysprop.ApkVerityProperties->tryParseLong(java.lang.String)
com.android.bluetooth.x.android.sysprop.ApkVerityProperties->tryParseString(java.lang.String)
com.android.bluetooth.x.android.sysprop.ApkVerityProperties->tryParseUInt(java.lang.String)
com.android.bluetooth.x.android.sysprop.ApkVerityProperties->tryParseULong(java.lang.String)
com.android.bluetooth.x.android.sysprop.BluetoothProperties$snoop_default_mode_values-><init>(java.lang.String,int,java.lang.String)
com.android.bluetooth.x.android.sysprop.BluetoothProperties$snoop_default_mode_values->getPropValue()
com.android.bluetooth.x.android.sysprop.BluetoothProperties$snoop_default_mode_values->valueOf(java.lang.String)
com.android.bluetooth.x.android.sysprop.BluetoothProperties$snoop_default_mode_values->values()
com.android.bluetooth.x.android.sysprop.BluetoothProperties$snoop_log_mode_values-><init>(java.lang.String,int,java.lang.String)
com.android.bluetooth.x.android.sysprop.BluetoothProperties$snoop_log_mode_values->getPropValue()
com.android.bluetooth.x.android.sysprop.BluetoothProperties$snoop_log_mode_values->valueOf(java.lang.String)
com.android.bluetooth.x.android.sysprop.BluetoothProperties$snoop_log_mode_values->values()
com.android.bluetooth.x.android.sysprop.BluetoothProperties-><init>()
com.android.bluetooth.x.android.sysprop.BluetoothProperties->escape(java.lang.String)
com.android.bluetooth.x.android.sysprop.BluetoothProperties->factory_reset()
com.android.bluetooth.x.android.sysprop.BluetoothProperties->factory_reset(java.lang.Boolean)
com.android.bluetooth.x.android.sysprop.BluetoothProperties->formatEnumList(java.util.List,java.util.function.Function)
com.android.bluetooth.x.android.sysprop.BluetoothProperties->formatList(java.util.List)
com.android.bluetooth.x.android.sysprop.BluetoothProperties->formatUIntList(java.util.List)
com.android.bluetooth.x.android.sysprop.BluetoothProperties->formatULongList(java.util.List)
com.android.bluetooth.x.android.sysprop.BluetoothProperties->getClassOfDevice()
com.android.bluetooth.x.android.sysprop.BluetoothProperties->getDefaultDeviceName()
com.android.bluetooth.x.android.sysprop.BluetoothProperties->getHardwareIdleCurrentMa()
com.android.bluetooth.x.android.sysprop.BluetoothProperties->getHardwareOperatingVoltageMv()
com.android.bluetooth.x.android.sysprop.BluetoothProperties->getHardwareRxCurrentMa()
com.android.bluetooth.x.android.sysprop.BluetoothProperties->getHardwareTxCurrentMa()
com.android.bluetooth.x.android.sysprop.BluetoothProperties->isAdapterAddressValidationEnabled()
com.android.bluetooth.x.android.sysprop.BluetoothProperties->isGapLePrivacyEnabled()
com.android.bluetooth.x.android.sysprop.BluetoothProperties->isProfileA2dpSinkEnabled()
com.android.bluetooth.x.android.sysprop.BluetoothProperties->isProfileA2dpSourceEnabled()
com.android.bluetooth.x.android.sysprop.BluetoothProperties->isProfileAshaCentralEnabled()
com.android.bluetooth.x.android.sysprop.BluetoothProperties->isProfileAvrcpControllerEnabled()
com.android.bluetooth.x.android.sysprop.BluetoothProperties->isProfileAvrcpTargetEnabled()
com.android.bluetooth.x.android.sysprop.BluetoothProperties->isProfileBapBroadcastAssistEnabled()
com.android.bluetooth.x.android.sysprop.BluetoothProperties->isProfileBapBroadcastSourceEnabled()
com.android.bluetooth.x.android.sysprop.BluetoothProperties->isProfileBapUnicastClientEnabled()
com.android.bluetooth.x.android.sysprop.BluetoothProperties->isProfileBasClientEnabled()
com.android.bluetooth.x.android.sysprop.BluetoothProperties->isProfileBassClientEnabled()
com.android.bluetooth.x.android.sysprop.BluetoothProperties->isProfileCcpServerEnabled()
com.android.bluetooth.x.android.sysprop.BluetoothProperties->isProfileCsipSetCoordinatorEnabled()
com.android.bluetooth.x.android.sysprop.BluetoothProperties->isProfileGattEnabled()
com.android.bluetooth.x.android.sysprop.BluetoothProperties->isProfileHapClientEnabled()
com.android.bluetooth.x.android.sysprop.BluetoothProperties->isProfileHfpAgEnabled()
com.android.bluetooth.x.android.sysprop.BluetoothProperties->isProfileHfpHfEnabled()
com.android.bluetooth.x.android.sysprop.BluetoothProperties->isProfileHidDeviceEnabled()
com.android.bluetooth.x.android.sysprop.BluetoothProperties->isProfileHidHostEnabled()
com.android.bluetooth.x.android.sysprop.BluetoothProperties->isProfileMapClientEnabled()
com.android.bluetooth.x.android.sysprop.BluetoothProperties->isProfileMapServerEnabled()
com.android.bluetooth.x.android.sysprop.BluetoothProperties->isProfileMcpServerEnabled()
com.android.bluetooth.x.android.sysprop.BluetoothProperties->isProfileOppEnabled()
com.android.bluetooth.x.android.sysprop.BluetoothProperties->isProfilePanNapEnabled()
com.android.bluetooth.x.android.sysprop.BluetoothProperties->isProfilePanPanuEnabled()
com.android.bluetooth.x.android.sysprop.BluetoothProperties->isProfilePbapClientEnabled()
com.android.bluetooth.x.android.sysprop.BluetoothProperties->isProfilePbapServerEnabled()
com.android.bluetooth.x.android.sysprop.BluetoothProperties->isProfileSapServerEnabled()
com.android.bluetooth.x.android.sysprop.BluetoothProperties->isProfileVcpControllerEnabled()
com.android.bluetooth.x.android.sysprop.BluetoothProperties->isSupportPersistedStateEnabled()
com.android.bluetooth.x.android.sysprop.BluetoothProperties->snoop_default_mode()
com.android.bluetooth.x.android.sysprop.BluetoothProperties->snoop_default_mode(com.android.bluetooth.x.android.sysprop.BluetoothProperties$snoop_default_mode_values)
com.android.bluetooth.x.android.sysprop.BluetoothProperties->snoop_log_mode()
com.android.bluetooth.x.android.sysprop.BluetoothProperties->snoop_log_mode(com.android.bluetooth.x.android.sysprop.BluetoothProperties$snoop_log_mode_values)
com.android.bluetooth.x.android.sysprop.BluetoothProperties->tryParseBoolean(java.lang.String)
com.android.bluetooth.x.android.sysprop.BluetoothProperties->tryParseDouble(java.lang.String)
com.android.bluetooth.x.android.sysprop.BluetoothProperties->tryParseEnum(java.lang.Class,java.lang.String)
com.android.bluetooth.x.android.sysprop.BluetoothProperties->tryParseEnumList(java.lang.Class,java.lang.String)
com.android.bluetooth.x.android.sysprop.BluetoothProperties->tryParseInteger(java.lang.String)
com.android.bluetooth.x.android.sysprop.BluetoothProperties->tryParseList(java.util.function.Function,java.lang.String)
com.android.bluetooth.x.android.sysprop.BluetoothProperties->tryParseLong(java.lang.String)
com.android.bluetooth.x.android.sysprop.BluetoothProperties->tryParseString(java.lang.String)
com.android.bluetooth.x.android.sysprop.BluetoothProperties->tryParseUInt(java.lang.String)
com.android.bluetooth.x.android.sysprop.BluetoothProperties->tryParseULong(java.lang.String)
com.android.bluetooth.x.android.sysprop.CarProperties-><init>()
com.android.bluetooth.x.android.sysprop.CarProperties->escape(java.lang.String)
com.android.bluetooth.x.android.sysprop.CarProperties->formatEnumList(java.util.List,java.util.function.Function)
com.android.bluetooth.x.android.sysprop.CarProperties->formatList(java.util.List)
com.android.bluetooth.x.android.sysprop.CarProperties->formatUIntList(java.util.List)
com.android.bluetooth.x.android.sysprop.CarProperties->formatULongList(java.util.List)
com.android.bluetooth.x.android.sysprop.CarProperties->tryParseBoolean(java.lang.String)
com.android.bluetooth.x.android.sysprop.CarProperties->tryParseDouble(java.lang.String)
com.android.bluetooth.x.android.sysprop.CarProperties->tryParseEnum(java.lang.Class,java.lang.String)
com.android.bluetooth.x.android.sysprop.CarProperties->tryParseEnumList(java.lang.Class,java.lang.String)
com.android.bluetooth.x.android.sysprop.CarProperties->tryParseInteger(java.lang.String)
com.android.bluetooth.x.android.sysprop.CarProperties->tryParseList(java.util.function.Function,java.lang.String)
com.android.bluetooth.x.android.sysprop.CarProperties->tryParseLong(java.lang.String)
com.android.bluetooth.x.android.sysprop.CarProperties->tryParseString(java.lang.String)
com.android.bluetooth.x.android.sysprop.CarProperties->tryParseUInt(java.lang.String)
com.android.bluetooth.x.android.sysprop.CarProperties->tryParseULong(java.lang.String)
com.android.bluetooth.x.android.sysprop.ContactsProperties-><init>()
com.android.bluetooth.x.android.sysprop.ContactsProperties->escape(java.lang.String)
com.android.bluetooth.x.android.sysprop.ContactsProperties->formatEnumList(java.util.List,java.util.function.Function)
com.android.bluetooth.x.android.sysprop.ContactsProperties->formatList(java.util.List)
com.android.bluetooth.x.android.sysprop.ContactsProperties->formatUIntList(java.util.List)
com.android.bluetooth.x.android.sysprop.ContactsProperties->formatULongList(java.util.List)
com.android.bluetooth.x.android.sysprop.ContactsProperties->tryParseBoolean(java.lang.String)
com.android.bluetooth.x.android.sysprop.ContactsProperties->tryParseDouble(java.lang.String)
com.android.bluetooth.x.android.sysprop.ContactsProperties->tryParseEnum(java.lang.Class,java.lang.String)
com.android.bluetooth.x.android.sysprop.ContactsProperties->tryParseEnumList(java.lang.Class,java.lang.String)
com.android.bluetooth.x.android.sysprop.ContactsProperties->tryParseInteger(java.lang.String)
com.android.bluetooth.x.android.sysprop.ContactsProperties->tryParseList(java.util.function.Function,java.lang.String)
com.android.bluetooth.x.android.sysprop.ContactsProperties->tryParseLong(java.lang.String)
com.android.bluetooth.x.android.sysprop.ContactsProperties->tryParseString(java.lang.String)
com.android.bluetooth.x.android.sysprop.ContactsProperties->tryParseUInt(java.lang.String)
com.android.bluetooth.x.android.sysprop.ContactsProperties->tryParseULong(java.lang.String)
com.android.bluetooth.x.android.sysprop.CryptoProperties-><init>()
com.android.bluetooth.x.android.sysprop.CryptoProperties->escape(java.lang.String)
com.android.bluetooth.x.android.sysprop.CryptoProperties->formatEnumList(java.util.List,java.util.function.Function)
com.android.bluetooth.x.android.sysprop.CryptoProperties->formatList(java.util.List)
com.android.bluetooth.x.android.sysprop.CryptoProperties->formatUIntList(java.util.List)
com.android.bluetooth.x.android.sysprop.CryptoProperties->formatULongList(java.util.List)
com.android.bluetooth.x.android.sysprop.CryptoProperties->tryParseBoolean(java.lang.String)
com.android.bluetooth.x.android.sysprop.CryptoProperties->tryParseDouble(java.lang.String)
com.android.bluetooth.x.android.sysprop.CryptoProperties->tryParseEnum(java.lang.Class,java.lang.String)
com.android.bluetooth.x.android.sysprop.CryptoProperties->tryParseEnumList(java.lang.Class,java.lang.String)
com.android.bluetooth.x.android.sysprop.CryptoProperties->tryParseInteger(java.lang.String)
com.android.bluetooth.x.android.sysprop.CryptoProperties->tryParseList(java.util.function.Function,java.lang.String)
com.android.bluetooth.x.android.sysprop.CryptoProperties->tryParseLong(java.lang.String)
com.android.bluetooth.x.android.sysprop.CryptoProperties->tryParseString(java.lang.String)
com.android.bluetooth.x.android.sysprop.CryptoProperties->tryParseUInt(java.lang.String)
com.android.bluetooth.x.android.sysprop.CryptoProperties->tryParseULong(java.lang.String)
com.android.bluetooth.x.android.sysprop.DeviceProperties-><init>()
com.android.bluetooth.x.android.sysprop.DeviceProperties->escape(java.lang.String)
com.android.bluetooth.x.android.sysprop.DeviceProperties->formatEnumList(java.util.List,java.util.function.Function)
com.android.bluetooth.x.android.sysprop.DeviceProperties->formatList(java.util.List)
com.android.bluetooth.x.android.sysprop.DeviceProperties->formatUIntList(java.util.List)
com.android.bluetooth.x.android.sysprop.DeviceProperties->formatULongList(java.util.List)
com.android.bluetooth.x.android.sysprop.DeviceProperties->media_performance_class()
com.android.bluetooth.x.android.sysprop.DeviceProperties->tryParseBoolean(java.lang.String)
com.android.bluetooth.x.android.sysprop.DeviceProperties->tryParseDouble(java.lang.String)
com.android.bluetooth.x.android.sysprop.DeviceProperties->tryParseEnum(java.lang.Class,java.lang.String)
com.android.bluetooth.x.android.sysprop.DeviceProperties->tryParseEnumList(java.lang.Class,java.lang.String)
com.android.bluetooth.x.android.sysprop.DeviceProperties->tryParseInteger(java.lang.String)
com.android.bluetooth.x.android.sysprop.DeviceProperties->tryParseList(java.util.function.Function,java.lang.String)
com.android.bluetooth.x.android.sysprop.DeviceProperties->tryParseLong(java.lang.String)
com.android.bluetooth.x.android.sysprop.DeviceProperties->tryParseString(java.lang.String)
com.android.bluetooth.x.android.sysprop.DeviceProperties->tryParseUInt(java.lang.String)
com.android.bluetooth.x.android.sysprop.DeviceProperties->tryParseULong(java.lang.String)
com.android.bluetooth.x.android.sysprop.DisplayProperties-><init>()
com.android.bluetooth.x.android.sysprop.DisplayProperties->escape(java.lang.String)
com.android.bluetooth.x.android.sysprop.DisplayProperties->formatEnumList(java.util.List,java.util.function.Function)
com.android.bluetooth.x.android.sysprop.DisplayProperties->formatList(java.util.List)
com.android.bluetooth.x.android.sysprop.DisplayProperties->formatUIntList(java.util.List)
com.android.bluetooth.x.android.sysprop.DisplayProperties->formatULongList(java.util.List)
com.android.bluetooth.x.android.sysprop.DisplayProperties->tryParseBoolean(java.lang.String)
com.android.bluetooth.x.android.sysprop.DisplayProperties->tryParseDouble(java.lang.String)
com.android.bluetooth.x.android.sysprop.DisplayProperties->tryParseEnum(java.lang.Class,java.lang.String)
com.android.bluetooth.x.android.sysprop.DisplayProperties->tryParseEnumList(java.lang.Class,java.lang.String)
com.android.bluetooth.x.android.sysprop.DisplayProperties->tryParseInteger(java.lang.String)
com.android.bluetooth.x.android.sysprop.DisplayProperties->tryParseList(java.util.function.Function,java.lang.String)
com.android.bluetooth.x.android.sysprop.DisplayProperties->tryParseLong(java.lang.String)
com.android.bluetooth.x.android.sysprop.DisplayProperties->tryParseString(java.lang.String)
com.android.bluetooth.x.android.sysprop.DisplayProperties->tryParseUInt(java.lang.String)
com.android.bluetooth.x.android.sysprop.DisplayProperties->tryParseULong(java.lang.String)
com.android.bluetooth.x.android.sysprop.HdmiProperties-><init>()
com.android.bluetooth.x.android.sysprop.HdmiProperties->escape(java.lang.String)
com.android.bluetooth.x.android.sysprop.HdmiProperties->formatEnumList(java.util.List,java.util.function.Function)
com.android.bluetooth.x.android.sysprop.HdmiProperties->formatList(java.util.List)
com.android.bluetooth.x.android.sysprop.HdmiProperties->formatUIntList(java.util.List)
com.android.bluetooth.x.android.sysprop.HdmiProperties->formatULongList(java.util.List)
com.android.bluetooth.x.android.sysprop.HdmiProperties->tryParseBoolean(java.lang.String)
com.android.bluetooth.x.android.sysprop.HdmiProperties->tryParseDouble(java.lang.String)
com.android.bluetooth.x.android.sysprop.HdmiProperties->tryParseEnum(java.lang.Class,java.lang.String)
com.android.bluetooth.x.android.sysprop.HdmiProperties->tryParseEnumList(java.lang.Class,java.lang.String)
com.android.bluetooth.x.android.sysprop.HdmiProperties->tryParseInteger(java.lang.String)
com.android.bluetooth.x.android.sysprop.HdmiProperties->tryParseList(java.util.function.Function,java.lang.String)
com.android.bluetooth.x.android.sysprop.HdmiProperties->tryParseLong(java.lang.String)
com.android.bluetooth.x.android.sysprop.HdmiProperties->tryParseString(java.lang.String)
com.android.bluetooth.x.android.sysprop.HdmiProperties->tryParseUInt(java.lang.String)
com.android.bluetooth.x.android.sysprop.HdmiProperties->tryParseULong(java.lang.String)
com.android.bluetooth.x.android.sysprop.HypervisorProperties-><init>()
com.android.bluetooth.x.android.sysprop.HypervisorProperties->escape(java.lang.String)
com.android.bluetooth.x.android.sysprop.HypervisorProperties->formatEnumList(java.util.List,java.util.function.Function)
com.android.bluetooth.x.android.sysprop.HypervisorProperties->formatList(java.util.List)
com.android.bluetooth.x.android.sysprop.HypervisorProperties->formatUIntList(java.util.List)
com.android.bluetooth.x.android.sysprop.HypervisorProperties->formatULongList(java.util.List)
com.android.bluetooth.x.android.sysprop.HypervisorProperties->hypervisor_protected_vm_supported()
com.android.bluetooth.x.android.sysprop.HypervisorProperties->hypervisor_version()
com.android.bluetooth.x.android.sysprop.HypervisorProperties->hypervisor_vm_supported()
com.android.bluetooth.x.android.sysprop.HypervisorProperties->tryParseBoolean(java.lang.String)
com.android.bluetooth.x.android.sysprop.HypervisorProperties->tryParseDouble(java.lang.String)
com.android.bluetooth.x.android.sysprop.HypervisorProperties->tryParseEnum(java.lang.Class,java.lang.String)
com.android.bluetooth.x.android.sysprop.HypervisorProperties->tryParseEnumList(java.lang.Class,java.lang.String)
com.android.bluetooth.x.android.sysprop.HypervisorProperties->tryParseInteger(java.lang.String)
com.android.bluetooth.x.android.sysprop.HypervisorProperties->tryParseList(java.util.function.Function,java.lang.String)
com.android.bluetooth.x.android.sysprop.HypervisorProperties->tryParseLong(java.lang.String)
com.android.bluetooth.x.android.sysprop.HypervisorProperties->tryParseString(java.lang.String)
com.android.bluetooth.x.android.sysprop.HypervisorProperties->tryParseUInt(java.lang.String)
com.android.bluetooth.x.android.sysprop.HypervisorProperties->tryParseULong(java.lang.String)
com.android.bluetooth.x.android.sysprop.InputProperties-><init>()
com.android.bluetooth.x.android.sysprop.InputProperties->escape(java.lang.String)
com.android.bluetooth.x.android.sysprop.InputProperties->formatEnumList(java.util.List,java.util.function.Function)
com.android.bluetooth.x.android.sysprop.InputProperties->formatList(java.util.List)
com.android.bluetooth.x.android.sysprop.InputProperties->formatUIntList(java.util.List)
com.android.bluetooth.x.android.sysprop.InputProperties->formatULongList(java.util.List)
com.android.bluetooth.x.android.sysprop.InputProperties->tryParseBoolean(java.lang.String)
com.android.bluetooth.x.android.sysprop.InputProperties->tryParseDouble(java.lang.String)
com.android.bluetooth.x.android.sysprop.InputProperties->tryParseEnum(java.lang.Class,java.lang.String)
com.android.bluetooth.x.android.sysprop.InputProperties->tryParseEnumList(java.lang.Class,java.lang.String)
com.android.bluetooth.x.android.sysprop.InputProperties->tryParseInteger(java.lang.String)
com.android.bluetooth.x.android.sysprop.InputProperties->tryParseList(java.util.function.Function,java.lang.String)
com.android.bluetooth.x.android.sysprop.InputProperties->tryParseLong(java.lang.String)
com.android.bluetooth.x.android.sysprop.InputProperties->tryParseString(java.lang.String)
com.android.bluetooth.x.android.sysprop.InputProperties->tryParseUInt(java.lang.String)
com.android.bluetooth.x.android.sysprop.InputProperties->tryParseULong(java.lang.String)
com.android.bluetooth.x.android.sysprop.MediaProperties-><init>()
com.android.bluetooth.x.android.sysprop.MediaProperties->codec2_dmabuf_padding()
com.android.bluetooth.x.android.sysprop.MediaProperties->escape(java.lang.String)
com.android.bluetooth.x.android.sysprop.MediaProperties->formatEnumList(java.util.List,java.util.function.Function)
com.android.bluetooth.x.android.sysprop.MediaProperties->formatList(java.util.List)
com.android.bluetooth.x.android.sysprop.MediaProperties->formatUIntList(java.util.List)
com.android.bluetooth.x.android.sysprop.MediaProperties->formatULongList(java.util.List)
com.android.bluetooth.x.android.sysprop.MediaProperties->resolution_limit_32bit()
com.android.bluetooth.x.android.sysprop.MediaProperties->swcodec_ion_align()
com.android.bluetooth.x.android.sysprop.MediaProperties->swcodec_ion_flags()
com.android.bluetooth.x.android.sysprop.MediaProperties->swcodec_ion_heapmask()
com.android.bluetooth.x.android.sysprop.MediaProperties->tryParseBoolean(java.lang.String)
com.android.bluetooth.x.android.sysprop.MediaProperties->tryParseDouble(java.lang.String)
com.android.bluetooth.x.android.sysprop.MediaProperties->tryParseEnum(java.lang.Class,java.lang.String)
com.android.bluetooth.x.android.sysprop.MediaProperties->tryParseEnumList(java.lang.Class,java.lang.String)
com.android.bluetooth.x.android.sysprop.MediaProperties->tryParseInteger(java.lang.String)
com.android.bluetooth.x.android.sysprop.MediaProperties->tryParseList(java.util.function.Function,java.lang.String)
com.android.bluetooth.x.android.sysprop.MediaProperties->tryParseLong(java.lang.String)
com.android.bluetooth.x.android.sysprop.MediaProperties->tryParseString(java.lang.String)
com.android.bluetooth.x.android.sysprop.MediaProperties->tryParseUInt(java.lang.String)
com.android.bluetooth.x.android.sysprop.MediaProperties->tryParseULong(java.lang.String)
com.android.bluetooth.x.android.sysprop.NetworkProperties-><init>()
com.android.bluetooth.x.android.sysprop.NetworkProperties->escape(java.lang.String)
com.android.bluetooth.x.android.sysprop.NetworkProperties->formatEnumList(java.util.List,java.util.function.Function)
com.android.bluetooth.x.android.sysprop.NetworkProperties->formatList(java.util.List)
com.android.bluetooth.x.android.sysprop.NetworkProperties->formatUIntList(java.util.List)
com.android.bluetooth.x.android.sysprop.NetworkProperties->formatULongList(java.util.List)
com.android.bluetooth.x.android.sysprop.NetworkProperties->isCellular464XlatEnabled()
com.android.bluetooth.x.android.sysprop.NetworkProperties->tcp_init_rwnd()
com.android.bluetooth.x.android.sysprop.NetworkProperties->tcp_init_rwnd(java.lang.Integer)
com.android.bluetooth.x.android.sysprop.NetworkProperties->tryParseBoolean(java.lang.String)
com.android.bluetooth.x.android.sysprop.NetworkProperties->tryParseDouble(java.lang.String)
com.android.bluetooth.x.android.sysprop.NetworkProperties->tryParseEnum(java.lang.Class,java.lang.String)
com.android.bluetooth.x.android.sysprop.NetworkProperties->tryParseEnumList(java.lang.Class,java.lang.String)
com.android.bluetooth.x.android.sysprop.NetworkProperties->tryParseInteger(java.lang.String)
com.android.bluetooth.x.android.sysprop.NetworkProperties->tryParseList(java.util.function.Function,java.lang.String)
com.android.bluetooth.x.android.sysprop.NetworkProperties->tryParseLong(java.lang.String)
com.android.bluetooth.x.android.sysprop.NetworkProperties->tryParseString(java.lang.String)
com.android.bluetooth.x.android.sysprop.NetworkProperties->tryParseUInt(java.lang.String)
com.android.bluetooth.x.android.sysprop.NetworkProperties->tryParseULong(java.lang.String)
com.android.bluetooth.x.android.sysprop.OtaProperties-><init>()
com.android.bluetooth.x.android.sysprop.OtaProperties->ab_ota_partitions()
com.android.bluetooth.x.android.sysprop.OtaProperties->escape(java.lang.String)
com.android.bluetooth.x.android.sysprop.OtaProperties->formatEnumList(java.util.List,java.util.function.Function)
com.android.bluetooth.x.android.sysprop.OtaProperties->formatList(java.util.List)
com.android.bluetooth.x.android.sysprop.OtaProperties->formatUIntList(java.util.List)
com.android.bluetooth.x.android.sysprop.OtaProperties->formatULongList(java.util.List)
com.android.bluetooth.x.android.sysprop.OtaProperties->tryParseBoolean(java.lang.String)
com.android.bluetooth.x.android.sysprop.OtaProperties->tryParseDouble(java.lang.String)
com.android.bluetooth.x.android.sysprop.OtaProperties->tryParseEnum(java.lang.Class,java.lang.String)
com.android.bluetooth.x.android.sysprop.OtaProperties->tryParseEnumList(java.lang.Class,java.lang.String)
com.android.bluetooth.x.android.sysprop.OtaProperties->tryParseInteger(java.lang.String)
com.android.bluetooth.x.android.sysprop.OtaProperties->tryParseList(java.util.function.Function,java.lang.String)
com.android.bluetooth.x.android.sysprop.OtaProperties->tryParseLong(java.lang.String)
com.android.bluetooth.x.android.sysprop.OtaProperties->tryParseString(java.lang.String)
com.android.bluetooth.x.android.sysprop.OtaProperties->tryParseUInt(java.lang.String)
com.android.bluetooth.x.android.sysprop.OtaProperties->tryParseULong(java.lang.String)
com.android.bluetooth.x.android.sysprop.OtaProperties->virtual_ab_enabled()
com.android.bluetooth.x.android.sysprop.OtaProperties->virtual_ab_retrofit()
com.android.bluetooth.x.android.sysprop.OtaProperties->warm_reset()
com.android.bluetooth.x.android.sysprop.OtaProperties->warm_reset(java.lang.Boolean)
com.android.bluetooth.x.android.sysprop.PowerProperties-><init>()
com.android.bluetooth.x.android.sysprop.PowerProperties->escape(java.lang.String)
com.android.bluetooth.x.android.sysprop.PowerProperties->fixed_performance_scale_factor()
com.android.bluetooth.x.android.sysprop.PowerProperties->formatEnumList(java.util.List,java.util.function.Function)
com.android.bluetooth.x.android.sysprop.PowerProperties->formatList(java.util.List)
com.android.bluetooth.x.android.sysprop.PowerProperties->formatUIntList(java.util.List)
com.android.bluetooth.x.android.sysprop.PowerProperties->formatULongList(java.util.List)
com.android.bluetooth.x.android.sysprop.PowerProperties->tryParseBoolean(java.lang.String)
com.android.bluetooth.x.android.sysprop.PowerProperties->tryParseDouble(java.lang.String)
com.android.bluetooth.x.android.sysprop.PowerProperties->tryParseEnum(java.lang.Class,java.lang.String)
com.android.bluetooth.x.android.sysprop.PowerProperties->tryParseEnumList(java.lang.Class,java.lang.String)
com.android.bluetooth.x.android.sysprop.PowerProperties->tryParseInteger(java.lang.String)
com.android.bluetooth.x.android.sysprop.PowerProperties->tryParseList(java.util.function.Function,java.lang.String)
com.android.bluetooth.x.android.sysprop.PowerProperties->tryParseLong(java.lang.String)
com.android.bluetooth.x.android.sysprop.PowerProperties->tryParseString(java.lang.String)
com.android.bluetooth.x.android.sysprop.PowerProperties->tryParseUInt(java.lang.String)
com.android.bluetooth.x.android.sysprop.PowerProperties->tryParseULong(java.lang.String)
com.android.bluetooth.x.android.sysprop.SetupWizardProperties-><init>()
com.android.bluetooth.x.android.sysprop.SetupWizardProperties->escape(java.lang.String)
com.android.bluetooth.x.android.sysprop.SetupWizardProperties->formatEnumList(java.util.List,java.util.function.Function)
com.android.bluetooth.x.android.sysprop.SetupWizardProperties->formatList(java.util.List)
com.android.bluetooth.x.android.sysprop.SetupWizardProperties->formatUIntList(java.util.List)
com.android.bluetooth.x.android.sysprop.SetupWizardProperties->formatULongList(java.util.List)
com.android.bluetooth.x.android.sysprop.SetupWizardProperties->tryParseBoolean(java.lang.String)
com.android.bluetooth.x.android.sysprop.SetupWizardProperties->tryParseDouble(java.lang.String)
com.android.bluetooth.x.android.sysprop.SetupWizardProperties->tryParseEnum(java.lang.Class,java.lang.String)
com.android.bluetooth.x.android.sysprop.SetupWizardProperties->tryParseEnumList(java.lang.Class,java.lang.String)
com.android.bluetooth.x.android.sysprop.SetupWizardProperties->tryParseInteger(java.lang.String)
com.android.bluetooth.x.android.sysprop.SetupWizardProperties->tryParseList(java.util.function.Function,java.lang.String)
com.android.bluetooth.x.android.sysprop.SetupWizardProperties->tryParseLong(java.lang.String)
com.android.bluetooth.x.android.sysprop.SetupWizardProperties->tryParseString(java.lang.String)
com.android.bluetooth.x.android.sysprop.SetupWizardProperties->tryParseUInt(java.lang.String)
com.android.bluetooth.x.android.sysprop.SetupWizardProperties->tryParseULong(java.lang.String)
com.android.bluetooth.x.android.sysprop.SocProperties-><init>()
com.android.bluetooth.x.android.sysprop.SocProperties->escape(java.lang.String)
com.android.bluetooth.x.android.sysprop.SocProperties->formatEnumList(java.util.List,java.util.function.Function)
com.android.bluetooth.x.android.sysprop.SocProperties->formatList(java.util.List)
com.android.bluetooth.x.android.sysprop.SocProperties->formatUIntList(java.util.List)
com.android.bluetooth.x.android.sysprop.SocProperties->formatULongList(java.util.List)
com.android.bluetooth.x.android.sysprop.SocProperties->soc_manufacturer()
com.android.bluetooth.x.android.sysprop.SocProperties->soc_model()
com.android.bluetooth.x.android.sysprop.SocProperties->tryParseBoolean(java.lang.String)
com.android.bluetooth.x.android.sysprop.SocProperties->tryParseDouble(java.lang.String)
com.android.bluetooth.x.android.sysprop.SocProperties->tryParseEnum(java.lang.Class,java.lang.String)
com.android.bluetooth.x.android.sysprop.SocProperties->tryParseEnumList(java.lang.Class,java.lang.String)
com.android.bluetooth.x.android.sysprop.SocProperties->tryParseInteger(java.lang.String)
com.android.bluetooth.x.android.sysprop.SocProperties->tryParseList(java.util.function.Function,java.lang.String)
com.android.bluetooth.x.android.sysprop.SocProperties->tryParseLong(java.lang.String)
com.android.bluetooth.x.android.sysprop.SocProperties->tryParseString(java.lang.String)
com.android.bluetooth.x.android.sysprop.SocProperties->tryParseUInt(java.lang.String)
com.android.bluetooth.x.android.sysprop.SocProperties->tryParseULong(java.lang.String)
com.android.bluetooth.x.android.sysprop.TelephonyProperties-><init>()
com.android.bluetooth.x.android.sysprop.TelephonyProperties->call_ring_delay()
com.android.bluetooth.x.android.sysprop.TelephonyProperties->disable_call()
com.android.bluetooth.x.android.sysprop.TelephonyProperties->ecm_exit_timer()
com.android.bluetooth.x.android.sysprop.TelephonyProperties->escape(java.lang.String)
com.android.bluetooth.x.android.sysprop.TelephonyProperties->formatEnumList(java.util.List,java.util.function.Function)
com.android.bluetooth.x.android.sysprop.TelephonyProperties->formatList(java.util.List)
com.android.bluetooth.x.android.sysprop.TelephonyProperties->formatUIntList(java.util.List)
com.android.bluetooth.x.android.sysprop.TelephonyProperties->formatULongList(java.util.List)
com.android.bluetooth.x.android.sysprop.TelephonyProperties->ignore_nitz()
com.android.bluetooth.x.android.sysprop.TelephonyProperties->in_ecm_mode()
com.android.bluetooth.x.android.sysprop.TelephonyProperties->in_ecm_mode(java.lang.Boolean)
com.android.bluetooth.x.android.sysprop.TelephonyProperties->max_active_modems()
com.android.bluetooth.x.android.sysprop.TelephonyProperties->mobile_data()
com.android.bluetooth.x.android.sysprop.TelephonyProperties->multi_sim_config()
com.android.bluetooth.x.android.sysprop.TelephonyProperties->multi_sim_config(java.lang.String)
com.android.bluetooth.x.android.sysprop.TelephonyProperties->operator_idp_string()
com.android.bluetooth.x.android.sysprop.TelephonyProperties->operator_idp_string(java.lang.String)
com.android.bluetooth.x.android.sysprop.TelephonyProperties->operator_iso_country()
com.android.bluetooth.x.android.sysprop.TelephonyProperties->operator_iso_country(java.util.List)
com.android.bluetooth.x.android.sysprop.TelephonyProperties->reset_on_radio_tech_change()
com.android.bluetooth.x.android.sysprop.TelephonyProperties->ril_sends_multiple_call_ring()
com.android.bluetooth.x.android.sysprop.TelephonyProperties->sim_slots_count()
com.android.bluetooth.x.android.sysprop.TelephonyProperties->test_csim()
com.android.bluetooth.x.android.sysprop.TelephonyProperties->tryParseBoolean(java.lang.String)
com.android.bluetooth.x.android.sysprop.TelephonyProperties->tryParseDouble(java.lang.String)
com.android.bluetooth.x.android.sysprop.TelephonyProperties->tryParseEnum(java.lang.Class,java.lang.String)
com.android.bluetooth.x.android.sysprop.TelephonyProperties->tryParseEnumList(java.lang.Class,java.lang.String)
com.android.bluetooth.x.android.sysprop.TelephonyProperties->tryParseInteger(java.lang.String)
com.android.bluetooth.x.android.sysprop.TelephonyProperties->tryParseList(java.util.function.Function,java.lang.String)
com.android.bluetooth.x.android.sysprop.TelephonyProperties->tryParseLong(java.lang.String)
com.android.bluetooth.x.android.sysprop.TelephonyProperties->tryParseString(java.lang.String)
com.android.bluetooth.x.android.sysprop.TelephonyProperties->tryParseUInt(java.lang.String)
com.android.bluetooth.x.android.sysprop.TelephonyProperties->tryParseULong(java.lang.String)
com.android.bluetooth.x.android.sysprop.TelephonyProperties->wake_lock_timeout()
com.android.bluetooth.x.android.sysprop.TraceProperties-><init>()
com.android.bluetooth.x.android.sysprop.TraceProperties->escape(java.lang.String)
com.android.bluetooth.x.android.sysprop.TraceProperties->formatEnumList(java.util.List,java.util.function.Function)
com.android.bluetooth.x.android.sysprop.TraceProperties->formatList(java.util.List)
com.android.bluetooth.x.android.sysprop.TraceProperties->formatUIntList(java.util.List)
com.android.bluetooth.x.android.sysprop.TraceProperties->formatULongList(java.util.List)
com.android.bluetooth.x.android.sysprop.TraceProperties->tryParseBoolean(java.lang.String)
com.android.bluetooth.x.android.sysprop.TraceProperties->tryParseDouble(java.lang.String)
com.android.bluetooth.x.android.sysprop.TraceProperties->tryParseEnum(java.lang.Class,java.lang.String)
com.android.bluetooth.x.android.sysprop.TraceProperties->tryParseEnumList(java.lang.Class,java.lang.String)
com.android.bluetooth.x.android.sysprop.TraceProperties->tryParseInteger(java.lang.String)
com.android.bluetooth.x.android.sysprop.TraceProperties->tryParseList(java.util.function.Function,java.lang.String)
com.android.bluetooth.x.android.sysprop.TraceProperties->tryParseLong(java.lang.String)
com.android.bluetooth.x.android.sysprop.TraceProperties->tryParseString(java.lang.String)
com.android.bluetooth.x.android.sysprop.TraceProperties->tryParseUInt(java.lang.String)
com.android.bluetooth.x.android.sysprop.TraceProperties->tryParseULong(java.lang.String)
com.android.bluetooth.x.android.sysprop.VndkProperties-><init>()
com.android.bluetooth.x.android.sysprop.VndkProperties->escape(java.lang.String)
com.android.bluetooth.x.android.sysprop.VndkProperties->formatEnumList(java.util.List,java.util.function.Function)
com.android.bluetooth.x.android.sysprop.VndkProperties->formatList(java.util.List)
com.android.bluetooth.x.android.sysprop.VndkProperties->formatUIntList(java.util.List)
com.android.bluetooth.x.android.sysprop.VndkProperties->formatULongList(java.util.List)
com.android.bluetooth.x.android.sysprop.VndkProperties->product_vndk_version()
com.android.bluetooth.x.android.sysprop.VndkProperties->tryParseBoolean(java.lang.String)
com.android.bluetooth.x.android.sysprop.VndkProperties->tryParseDouble(java.lang.String)
com.android.bluetooth.x.android.sysprop.VndkProperties->tryParseEnum(java.lang.Class,java.lang.String)
com.android.bluetooth.x.android.sysprop.VndkProperties->tryParseEnumList(java.lang.Class,java.lang.String)
com.android.bluetooth.x.android.sysprop.VndkProperties->tryParseInteger(java.lang.String)
com.android.bluetooth.x.android.sysprop.VndkProperties->tryParseList(java.util.function.Function,java.lang.String)
com.android.bluetooth.x.android.sysprop.VndkProperties->tryParseLong(java.lang.String)
com.android.bluetooth.x.android.sysprop.VndkProperties->tryParseString(java.lang.String)
com.android.bluetooth.x.android.sysprop.VndkProperties->tryParseUInt(java.lang.String)
com.android.bluetooth.x.android.sysprop.VndkProperties->tryParseULong(java.lang.String)
com.android.bluetooth.x.android.sysprop.VndkProperties->vendor_vndk_version()
com.android.bluetooth.x.android.sysprop.VoldProperties-><init>()
com.android.bluetooth.x.android.sysprop.VoldProperties->escape(java.lang.String)
com.android.bluetooth.x.android.sysprop.VoldProperties->formatEnumList(java.util.List,java.util.function.Function)
com.android.bluetooth.x.android.sysprop.VoldProperties->formatList(java.util.List)
com.android.bluetooth.x.android.sysprop.VoldProperties->formatUIntList(java.util.List)
com.android.bluetooth.x.android.sysprop.VoldProperties->formatULongList(java.util.List)
com.android.bluetooth.x.android.sysprop.VoldProperties->tryParseBoolean(java.lang.String)
com.android.bluetooth.x.android.sysprop.VoldProperties->tryParseDouble(java.lang.String)
com.android.bluetooth.x.android.sysprop.VoldProperties->tryParseEnum(java.lang.Class,java.lang.String)
com.android.bluetooth.x.android.sysprop.VoldProperties->tryParseEnumList(java.lang.Class,java.lang.String)
com.android.bluetooth.x.android.sysprop.VoldProperties->tryParseInteger(java.lang.String)
com.android.bluetooth.x.android.sysprop.VoldProperties->tryParseList(java.util.function.Function,java.lang.String)
com.android.bluetooth.x.android.sysprop.VoldProperties->tryParseLong(java.lang.String)
com.android.bluetooth.x.android.sysprop.VoldProperties->tryParseString(java.lang.String)
com.android.bluetooth.x.android.sysprop.VoldProperties->tryParseUInt(java.lang.String)
com.android.bluetooth.x.android.sysprop.VoldProperties->tryParseULong(java.lang.String)
com.android.bluetooth.x.android.sysprop.WifiProperties-><init>()
com.android.bluetooth.x.android.sysprop.WifiProperties->escape(java.lang.String)
com.android.bluetooth.x.android.sysprop.WifiProperties->formatEnumList(java.util.List,java.util.function.Function)
com.android.bluetooth.x.android.sysprop.WifiProperties->formatList(java.util.List)
com.android.bluetooth.x.android.sysprop.WifiProperties->formatUIntList(java.util.List)
com.android.bluetooth.x.android.sysprop.WifiProperties->formatULongList(java.util.List)
com.android.bluetooth.x.android.sysprop.WifiProperties->start_supplicant()
com.android.bluetooth.x.android.sysprop.WifiProperties->start_supplicant(java.lang.Boolean)
com.android.bluetooth.x.android.sysprop.WifiProperties->stop_supplicant()
com.android.bluetooth.x.android.sysprop.WifiProperties->stop_supplicant(java.lang.Boolean)
com.android.bluetooth.x.android.sysprop.WifiProperties->tryParseBoolean(java.lang.String)
com.android.bluetooth.x.android.sysprop.WifiProperties->tryParseDouble(java.lang.String)
com.android.bluetooth.x.android.sysprop.WifiProperties->tryParseEnum(java.lang.Class,java.lang.String)
com.android.bluetooth.x.android.sysprop.WifiProperties->tryParseEnumList(java.lang.Class,java.lang.String)
com.android.bluetooth.x.android.sysprop.WifiProperties->tryParseInteger(java.lang.String)
com.android.bluetooth.x.android.sysprop.WifiProperties->tryParseList(java.util.function.Function,java.lang.String)
com.android.bluetooth.x.android.sysprop.WifiProperties->tryParseLong(java.lang.String)
com.android.bluetooth.x.android.sysprop.WifiProperties->tryParseString(java.lang.String)
com.android.bluetooth.x.android.sysprop.WifiProperties->tryParseUInt(java.lang.String)
com.android.bluetooth.x.android.sysprop.WifiProperties->tryParseULong(java.lang.String)
com.android.bluetooth.x.com.android.modules.utils.ISynchronousResultReceiver$Default-><init>()
com.android.bluetooth.x.com.android.modules.utils.ISynchronousResultReceiver$Default->asBinder()
com.android.bluetooth.x.com.android.modules.utils.ISynchronousResultReceiver$Default->send(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver$Result)
com.android.bluetooth.x.com.android.modules.utils.ISynchronousResultReceiver$Stub$Proxy-><init>(android.os.IBinder)
com.android.bluetooth.x.com.android.modules.utils.ISynchronousResultReceiver$Stub$Proxy->asBinder()
com.android.bluetooth.x.com.android.modules.utils.ISynchronousResultReceiver$Stub$Proxy->getInterfaceDescriptor()
com.android.bluetooth.x.com.android.modules.utils.ISynchronousResultReceiver$Stub$Proxy->send(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver$Result)
com.android.bluetooth.x.com.android.modules.utils.ISynchronousResultReceiver$Stub-><init>()
com.android.bluetooth.x.com.android.modules.utils.ISynchronousResultReceiver$Stub->asBinder()
com.android.bluetooth.x.com.android.modules.utils.ISynchronousResultReceiver$Stub->asInterface(android.os.IBinder)
com.android.bluetooth.x.com.android.modules.utils.ISynchronousResultReceiver$Stub->onTransact(int,android.os.Parcel,android.os.Parcel,int)
com.android.bluetooth.x.com.android.modules.utils.ISynchronousResultReceiver->send(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver$Result)
com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver$MyResultReceiver-><init>(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver)
com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver$MyResultReceiver-><init>(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver$MyResultReceiver-IA)
com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver$MyResultReceiver->send(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver$Result)
com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver$Result-><init>(android.os.Parcel)
com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver$Result-><init>(android.os.Parcel,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver$Result-IA)
com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver$Result-><init>(java.lang.Object)
com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver$Result-><init>(java.lang.RuntimeException)
com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver$Result->describeContents()
com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver$Result->getValue(java.lang.Object)
com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver$Result->writeToParcel(android.os.Parcel,int)
com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver-><init>()
com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver-><init>(android.os.Parcel)
com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver-><init>(android.os.Parcel,com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver-IA)
com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver->awaitResultNoInterrupt(java.time.Duration)
com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver->complete(com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver$Result)
com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver->describeContents()
com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver->get()
com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver->getFuture()
com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver->propagateException(java.lang.RuntimeException)
com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver->releaseLocked()
com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver->resetLocked()
com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver->send(java.lang.Object)
com.android.bluetooth.x.com.android.modules.utils.SynchronousResultReceiver->writeToParcel(android.os.Parcel,int)
com.android.internal.accessibility.AccessibilityShortcutController->performTtsPrompt(android.app.AlertDialog)
com.android.internal.app.ChooserListAdapter->createSortingTask(boolean)
com.android.internal.app.IAppOpsService$Default->finishProxyOperation(int,android.content.AttributionSource,boolean)
com.android.internal.app.IAppOpsService$Default->startProxyOperation(int,android.content.AttributionSource,boolean,boolean,java.lang.String,boolean,boolean,int,int,int)
com.android.internal.app.IAppOpsService$Stub$Proxy->finishProxyOperation(int,android.content.AttributionSource,boolean)
com.android.internal.app.IAppOpsService$Stub$Proxy->startProxyOperation(int,android.content.AttributionSource,boolean,boolean,java.lang.String,boolean,boolean,int,int,int)
com.android.internal.app.IAppOpsService->finishProxyOperation(int,android.content.AttributionSource,boolean)
com.android.internal.app.IAppOpsService->startProxyOperation(int,android.content.AttributionSource,boolean,boolean,java.lang.String,boolean,boolean,int,int,int)
com.android.internal.app.ResolverActivity->isLaunchingTargetInOtherProfile()
com.android.internal.app.ResolverActivity->prepareIntentForCrossProfileLaunch(android.content.Intent)
com.android.internal.display.BrightnessSynchronizer$BrightnessSyncObserver->startObserving()
com.android.internal.os.BinderDeathDispatcher$RecipientsInfo->binderDied(android.os.IBinder)
com.android.internal.telephony.GsmCdmaPhone->handleEnterEmergencyCallbackMode(android.os.Message)
com.android.internal.telephony.GsmCdmaPhone->handleExitEmergencyCallbackMode(android.os.Message)
com.android.internal.telephony.GsmCdmaPhone->handleTimerInEmergencyCallbackMode(int)
com.android.internal.telephony.GsmCdmaPhone->notifyEcbmTimerReset(java.lang.Boolean)
com.android.internal.telephony.GsmCdmaPhone->registerForEcmTimerReset(android.os.Handler,int,java.lang.Object)
com.android.internal.telephony.GsmCdmaPhone->sendEmergencyCallbackModeChange()
com.android.internal.telephony.GsmCdmaPhone->unregisterForEcmTimerReset(android.os.Handler)
com.android.internal.telephony.IccPhoneBookInterfaceManager$Request-><init>(com.android.internal.telephony.IccPhoneBookInterfaceManager$Request-IA)
com.android.internal.telephony.ImsSmsDispatcher->isEmergencySmsPossible()
com.android.internal.telephony.Phone->setIsInEcm(boolean)
com.android.internal.telephony.SubscriptionController->getIccIdsOfInsertedPhysicalSims()
com.android.internal.telephony.SubscriptionController->migrateImsSettingHelper(java.lang.String,java.lang.String)
com.android.internal.telephony.data.DataProfileManager->getDataProfile(java.lang.String,android.telephony.data.TrafficDescriptor)
com.android.internal.telephony.data.PhoneSwitcher$EmergencyOverrideRequest-><init>(com.android.internal.telephony.data.PhoneSwitcher$EmergencyOverrideRequest-IA)
com.android.internal.telephony.data.TelephonyNetworkFactory-><init>(android.os.Looper,com.android.internal.telephony.Phone)
com.android.internal.telephony.imsphone.ImsPhone$Cf-><init>(java.lang.String,boolean,android.os.Message)
com.android.internal.telephony.imsphone.ImsPhone->exitEmergencyCallbackMode()
com.android.internal.telephony.imsphone.ImsPhone->getImsEcbmStateListener()
com.android.internal.telephony.imsphone.ImsPhone->handleCallHoldIncallSupplementaryService(java.lang.String)
com.android.internal.telephony.imsphone.ImsPhone->handleCallWaitingIncallSupplementaryService(java.lang.String)
com.android.internal.telephony.imsphone.ImsPhone->handleTimerInEmergencyCallbackMode(int)
com.android.internal.telephony.imsphone.ImsPhone->isInEcm()
com.android.internal.telephony.imsphone.ImsPhone->sendEmergencyCallbackModeChange()
com.android.internal.telephony.imsphone.ImsPhone->setIsInEcm(boolean)
com.android.internal.telephony.imsphone.ImsPhone->unsetOnEcbModeExitResponse(android.os.Handler)
com.android.internal.telephony.imsphone.ImsPhoneCallTracker->isPhoneInEcbMode()
com.android.internal.telephony.uicc.UiccCarrierPrivilegeRules->areCarrierPriviligeRulesLoaded()
com.android.internal.telephony.uicc.UiccProfile->areAllApplicationsReady()
com.android.internal.telephony.uicc.UiccProfile->areAllRecordsLoaded()
com.android.phone.ecc.nano.Extension->computeSerializedSize(java.lang.Object)
com.android.phone.ecc.nano.Extension->writeTo(java.lang.Object,com.android.phone.ecc.nano.CodedOutputByteBufferNano)
com.android.server.biometrics.face.FaceActionStatsProto-><init>()
com.android.server.biometrics.face.FaceServiceDumpProto-><init>()
com.android.server.biometrics.face.FaceUserStatsProto-><init>()
com.android.x.uwb.com.android.internal.util.Preconditions-><init>()
com.android.x.uwb.com.android.internal.util.Preconditions->checkArgument(boolean)
com.android.x.uwb.com.android.internal.util.Preconditions->checkArgument(boolean,java.lang.Object)
com.android.x.uwb.com.android.internal.util.Preconditions->checkArgument(boolean,java.lang.String,java.lang.Object[])
com.android.x.uwb.com.android.internal.util.Preconditions->checkArgumentFinite(float,java.lang.String)
com.android.x.uwb.com.android.internal.util.Preconditions->checkArgumentInRange(double,double,double,java.lang.String)
com.android.x.uwb.com.android.internal.util.Preconditions->checkArgumentInRange(float,float,float,java.lang.String)
com.android.x.uwb.com.android.internal.util.Preconditions->checkArgumentInRange(int,int,int,java.lang.String)
com.android.x.uwb.com.android.internal.util.Preconditions->checkArgumentInRange(long,long,long,java.lang.String)
com.android.x.uwb.com.android.internal.util.Preconditions->checkArgumentIsSupported(java.lang.String[],java.lang.String)
com.android.x.uwb.com.android.internal.util.Preconditions->checkArgumentNonNegative(float,java.lang.String)
com.android.x.uwb.com.android.internal.util.Preconditions->checkArgumentNonnegative(int)
com.android.x.uwb.com.android.internal.util.Preconditions->checkArgumentNonnegative(int,java.lang.String)
com.android.x.uwb.com.android.internal.util.Preconditions->checkArgumentNonnegative(long)
com.android.x.uwb.com.android.internal.util.Preconditions->checkArgumentNonnegative(long,java.lang.String)
com.android.x.uwb.com.android.internal.util.Preconditions->checkArgumentPositive(float,java.lang.String)
com.android.x.uwb.com.android.internal.util.Preconditions->checkArgumentPositive(int,java.lang.String)
com.android.x.uwb.com.android.internal.util.Preconditions->checkArrayElementsInRange(float[],float,float,java.lang.String)
com.android.x.uwb.com.android.internal.util.Preconditions->checkArrayElementsInRange(int[],int,int,java.lang.String)
com.android.x.uwb.com.android.internal.util.Preconditions->checkArrayElementsNotNull(java.lang.Object[],java.lang.String)
com.android.x.uwb.com.android.internal.util.Preconditions->checkByteArrayNotEmpty(byte[],java.lang.String)
com.android.x.uwb.com.android.internal.util.Preconditions->checkCallAuthorization(boolean)
com.android.x.uwb.com.android.internal.util.Preconditions->checkCallAuthorization(boolean,java.lang.String)
com.android.x.uwb.com.android.internal.util.Preconditions->checkCallAuthorization(boolean,java.lang.String,java.lang.Object[])
com.android.x.uwb.com.android.internal.util.Preconditions->checkCallingUser(boolean)
com.android.x.uwb.com.android.internal.util.Preconditions->checkCollectionElementsNotNull(java.util.Collection,java.lang.String)
com.android.x.uwb.com.android.internal.util.Preconditions->checkCollectionNotEmpty(java.util.Collection,java.lang.String)
com.android.x.uwb.com.android.internal.util.Preconditions->checkFlagsArgument(int,int)
com.android.x.uwb.com.android.internal.util.Preconditions->checkNotNull(java.lang.Object)
com.android.x.uwb.com.android.internal.util.Preconditions->checkNotNull(java.lang.Object,java.lang.Object)
com.android.x.uwb.com.android.internal.util.Preconditions->checkNotNull(java.lang.Object,java.lang.String,java.lang.Object[])
com.android.x.uwb.com.android.internal.util.Preconditions->checkState(boolean)
com.android.x.uwb.com.android.internal.util.Preconditions->checkState(boolean,java.lang.String)
com.android.x.uwb.com.android.internal.util.Preconditions->checkState(boolean,java.lang.String,java.lang.Object[])
com.android.x.uwb.com.android.internal.util.Preconditions->checkStringNotEmpty(java.lang.CharSequence)
com.android.x.uwb.com.android.internal.util.Preconditions->checkStringNotEmpty(java.lang.CharSequence,java.lang.Object)
com.android.x.uwb.com.android.internal.util.Preconditions->checkStringNotEmpty(java.lang.CharSequence,java.lang.String,java.lang.Object[])
com.android.x.uwb.com.android.internal.util.Preconditions->contains(java.lang.String[],java.lang.String)
sun.misc.FloatingDecimal->getHexDigit(java.lang.String,int)
sun.misc.FloatingDecimal->stripLeadingZeros(java.lang.String)
