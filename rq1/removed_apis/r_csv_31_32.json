{
 "class": {
  "none": [
   "Landroid/os/TouchOcclusionMode;"
  ],
  "removed": [
   "Landroid/app/ForegroundServiceDidNotStartInTimeException;"
  ],
  "annotate_remove": [],
  "deprecated": [],
  "hidden": [],
  "other": []
 },
 "field": {
  "none": [
   "Landroid/app/IActivityManager$Stub;->TRANSACTION_crashApplication",
   "Landroid/hardware/ICameraServiceProxy$Stub;->TRANSACTION_isRotateAndCropOverrideNeeded",
   "Landroid/hardware/fingerprint/IFingerprintService$Stub;->TRANSACTION_hasEnrolledTemplatesForAnySensor",
   "Landroid/hardware/fingerprint/IUdfpsOverlayController;->REASON_AUTH_BP",
   "Landroid/hardware/fingerprint/IUdfpsOverlayController;->REASON_AUTH_FPM_KEYGUARD",
   "Landroid/hardware/fingerprint/IUdfpsOverlayController;->REASON_AUTH_FPM_OTHER",
   "Landroid/hardware/fingerprint/IUdfpsOverlayController;->REASON_ENROLL_ENROLLING",
   "Landroid/hardware/fingerprint/IUdfpsOverlayController;->REASON_ENROLL_FIND_SENSOR",
   "Landroid/hardware/fingerprint/IUdfpsOverlayController;->REASON_UNKNOWN",
   "Landroid/os/TouchOcclusionMode;->ALLOW",
   "Landroid/os/TouchOcclusionMode;->BLOCK_UNTRUSTED",
   "Landroid/os/TouchOcclusionMode;->USE_OPACITY",
   "Landroid/view/IRecentsAnimationRunner$Stub;->TRANSACTION_onTaskAppeared",
   "Landroid/view/IWindowManager$Stub;->TRANSACTION_modifyDisplayWindowInsets",
   "Landroid/view/IWindowSession$Stub;->TRANSACTION_insetsModified",
   "Lcom/android/internal/R$bool;->config_volumeShowRemoteSessions",
   "Lcom/android/internal/policy/IKeyguardStateCallback$Stub;->TRANSACTION_onHasLockscreenWallpaperChanged",
   "Lcom/android/internal/telephony/ServiceStateTracker;->DELAY_RADIO_OFF_FOR_IMS_DEREG_TIMEOUT",
   "Lcom/android/internal/telephony/dataconnection/TransportManager;->ACCESS_NETWORK_TRANSPORT_TYPE_MAP",
   "Lcom/android/internal/telephony/dataconnection/TransportManager;->EVENT_UPDATE_AVAILABLE_NETWORKS",
   "Lcom/android/internal/telephony/dataconnection/TransportManager;->mCurrentAvailableNetworks",
   "Lcom/android/internal/telephony/dataconnection/TransportManager;->mQueuedNetworksList"
  ],
  "removed": [
   "Landroid/app/Activity;->mSplashScreenView",
   "Landroid/app/ActivityThread;->mSystemUiContext",
   "Landroid/app/ForegroundServiceDidNotStartInTimeException;->TYPE_ID",
   "Landroid/app/NotificationChannel;->mIsSoundMissing",
   "Landroid/app/RemoteServiceException;->TYPE_ID",
   "Landroid/app/WallpaperManager$Globals;->mLocalColorAreas",
   "Landroid/app/servertransaction/TransferSplashScreenViewStateItem;->ATTACH_TO",
   "Landroid/app/servertransaction/TransferSplashScreenViewStateItem;->HANDOVER_TO",
   "Landroid/app/servertransaction/TransferSplashScreenViewStateItem;->mRequest",
   "Landroid/appwidget/AppWidgetHostView;->mLayoutId",
   "Landroid/hardware/camera2/CaptureFailure;->mDropped",
   "Landroid/hardware/face/FaceManager;->DEBUG",
   "Landroid/hardware/face/FaceManager$OnAuthenticationCancelListener;->mCrypto",
   "Landroid/hardware/fingerprint/FingerprintManager$OnAuthenticationCancelListener;->mCrypto",
   "Landroid/hardware/fingerprint/FingerprintSensorPropertiesInternal;->sensorLocationX",
   "Landroid/hardware/fingerprint/FingerprintSensorPropertiesInternal;->sensorLocationY",
   "Landroid/hardware/fingerprint/FingerprintSensorPropertiesInternal;->sensorRadius",
   "Landroid/net/NetworkTemplate;->sForceAllNetworkTypes",
   "Landroid/os/GraphicsEnvironment;->ANGLE_RULES_FILE",
   "Landroid/os/GraphicsEnvironment;->ANGLE_TEMP_RULES",
   "Landroid/provider/Settings$Global;->ANGLE_ALLOWLIST",
   "Landroid/service/notification/NotificationListenerService$Ranking;->mVisuallyInterruptive",
   "Landroid/service/wallpaper/WallpaperService$Engine;->mFinalStableInsets",
   "Landroid/service/wallpaper/WallpaperService$Engine;->mFinalSystemInsets",
   "Landroid/service/wallpaper/WallpaperService$Engine;->mLastPageOffset",
   "Landroid/view/InsetsController;->mRequestedState",
   "Landroid/view/InsetsController;->mTmpFinishedControls",
   "Landroid/view/SurfaceControl;->mTransformHint",
   "Landroid/view/SurfaceView;->mRtHandlingPositionUpdates",
   "Landroid/view/SurfaceView;->mRtReleaseSurfaces",
   "Landroid/view/accessibility/AccessibilityManager;->STATE_FLAG_ACCESSIBILITY_TRACING_ENABLED",
   "Landroid/view/accessibility/AccessibilityManager;->mIsAccessibilityTracingEnabled",
   "Landroid/window/PictureInPictureSurfaceTransaction;->mPositionX",
   "Landroid/window/PictureInPictureSurfaceTransaction;->mPositionY",
   "Landroid/window/StartingWindowInfo;->mTaskSnapshot",
   "Landroid/window/WindowContextController;->mWms",
   "Lcom/android/internal/app/ChooserActivity;->MAX_TARGETS_PER_ROW_LANDSCAPE",
   "Lcom/android/internal/app/ChooserActivity;->MAX_TARGETS_PER_ROW_PORTRAIT",
   "Lcom/android/internal/app/SuspendedAppActivity;->mUnsuspendReceiver",
   "Lcom/android/internal/notification/NotificationAccessConfirmationActivityContract;->COMPONENT_NAME",
   "Lcom/android/internal/os/AmbientDisplayPowerCalculator;->mPowerEstimator",
   "Lcom/android/internal/os/BatteryStatsImpl;->mScreenStateAtLastEnergyMeasurement",
   "Lcom/android/internal/os/ScreenPowerCalculator;->mScreenFullPowerEstimator",
   "Lcom/android/internal/os/ScreenPowerCalculator;->mScreenOnPowerEstimator",
   "Lcom/android/internal/policy/DecorView;->mAvailableWidth",
   "Lcom/android/internal/statusbar/RegisterStatusBarResult;->mAppFullscreen",
   "Lcom/android/internal/util/LatencyTracker;->mStartRtc"
  ],
  "annotate_remove": [],
  "deprecated": [],
  "hidden": [],
  "other": []
 },
 "method": {
  "none": [
   "Landroid/accessibilityservice/IAccessibilityServiceConnection;->logTrace(JLjava/lang/String;Ljava/lang/String;IJILandroid/os/Bundle;)",
   "Landroid/accessibilityservice/IAccessibilityServiceConnection$Default;->logTrace(JLjava/lang/String;Ljava/lang/String;IJILandroid/os/Bundle;)",
   "Landroid/accessibilityservice/IAccessibilityServiceConnection$Stub$Proxy;->logTrace(JLjava/lang/String;Ljava/lang/String;IJILandroid/os/Bundle;)",
   "Landroid/app/IActivityManager;->broadcastIntentWithFeature(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;[Ljava/lang/String;ILandroid/os/Bundle;ZZI)",
   "Landroid/app/IActivityManager;->crashApplication(IILjava/lang/String;ILjava/lang/String;Z)",
   "Landroid/app/IActivityManager$Default;->broadcastIntentWithFeature(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;[Ljava/lang/String;ILandroid/os/Bundle;ZZI)",
   "Landroid/app/IActivityManager$Default;->crashApplication(IILjava/lang/String;ILjava/lang/String;Z)",
   "Landroid/app/IActivityManager$Stub$Proxy;->broadcastIntentWithFeature(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;[Ljava/lang/String;[Ljava/lang/String;ILandroid/os/Bundle;ZZI)",
   "Landroid/app/IActivityManager$Stub$Proxy;->crashApplication(IILjava/lang/String;ILjava/lang/String;Z)",
   "Landroid/app/IApplicationThread;->scheduleCrash(Ljava/lang/String;I)",
   "Landroid/app/IApplicationThread$Default;->scheduleCrash(Ljava/lang/String;I)",
   "Landroid/app/IApplicationThread$Stub$Proxy;->scheduleCrash(Ljava/lang/String;I)",
   "Landroid/app/admin/IDevicePolicyManager;->setDeviceOwner(Landroid/content/ComponentName;Ljava/lang/String;I)",
   "Landroid/app/admin/IDevicePolicyManager$Default;->setDeviceOwner(Landroid/content/ComponentName;Ljava/lang/String;I)",
   "Landroid/app/admin/IDevicePolicyManager$Stub$Proxy;->setDeviceOwner(Landroid/content/ComponentName;Ljava/lang/String;I)",
   "Landroid/hardware/ICameraServiceProxy;->isRotateAndCropOverrideNeeded(Ljava/lang/String;II)",
   "Landroid/hardware/ICameraServiceProxy$Default;->isRotateAndCropOverrideNeeded(Ljava/lang/String;II)",
   "Landroid/hardware/ICameraServiceProxy$Stub$Proxy;->isRotateAndCropOverrideNeeded(Ljava/lang/String;II)",
   "Landroid/hardware/biometrics/BiometricPrompt$OnAuthenticationCancelListener;-><init>(Landroid/hardware/biometrics/BiometricPrompt;)",
   "Landroid/hardware/biometrics/BiometricPrompt$OnAuthenticationCancelListener;-><init>(Landroid/hardware/biometrics/BiometricPrompt;Landroid/hardware/biometrics/BiometricPrompt$1;)",
   "Landroid/hardware/biometrics/IAuthService;->cancelAuthentication(Landroid/os/IBinder;Ljava/lang/String;)",
   "Landroid/hardware/biometrics/IAuthService$Default;->cancelAuthentication(Landroid/os/IBinder;Ljava/lang/String;)",
   "Landroid/hardware/biometrics/IAuthService$Stub$Proxy;->cancelAuthentication(Landroid/os/IBinder;Ljava/lang/String;)",
   "Landroid/hardware/biometrics/IBiometricAuthenticator;->cancelAuthenticationFromService(Landroid/os/IBinder;Ljava/lang/String;)",
   "Landroid/hardware/biometrics/IBiometricAuthenticator;->prepareForAuthentication(ZLandroid/os/IBinder;JILandroid/hardware/biometrics/IBiometricSensorReceiver;Ljava/lang/String;IZ)",
   "Landroid/hardware/biometrics/IBiometricAuthenticator$Default;->cancelAuthenticationFromService(Landroid/os/IBinder;Ljava/lang/String;)",
   "Landroid/hardware/biometrics/IBiometricAuthenticator$Default;->prepareForAuthentication(ZLandroid/os/IBinder;JILandroid/hardware/biometrics/IBiometricSensorReceiver;Ljava/lang/String;IZ)",
   "Landroid/hardware/biometrics/IBiometricAuthenticator$Stub$Proxy;->cancelAuthenticationFromService(Landroid/os/IBinder;Ljava/lang/String;)",
   "Landroid/hardware/biometrics/IBiometricAuthenticator$Stub$Proxy;->prepareForAuthentication(ZLandroid/os/IBinder;JILandroid/hardware/biometrics/IBiometricSensorReceiver;Ljava/lang/String;IZ)",
   "Landroid/hardware/biometrics/IBiometricService;->cancelAuthentication(Landroid/os/IBinder;Ljava/lang/String;)",
   "Landroid/hardware/biometrics/IBiometricService$Default;->cancelAuthentication(Landroid/os/IBinder;Ljava/lang/String;)",
   "Landroid/hardware/biometrics/IBiometricService$Stub$Proxy;->cancelAuthentication(Landroid/os/IBinder;Ljava/lang/String;)",
   "Landroid/hardware/face/FaceManager$OnAuthenticationCancelListener;-><init>(Landroid/hardware/face/FaceManager;Landroid/hardware/biometrics/CryptoObject;)",
   "Landroid/hardware/face/FaceManager$OnFaceDetectionCancelListener;-><init>(Landroid/hardware/face/FaceManager;)",
   "Landroid/hardware/face/FaceManager$OnFaceDetectionCancelListener;-><init>(Landroid/hardware/face/FaceManager;Landroid/hardware/face/FaceManager$1;)",
   "Landroid/hardware/face/IFaceService;->cancelAuthentication(Landroid/os/IBinder;Ljava/lang/String;)",
   "Landroid/hardware/face/IFaceService;->cancelAuthenticationFromService(ILandroid/os/IBinder;Ljava/lang/String;)",
   "Landroid/hardware/face/IFaceService;->cancelFaceDetect(Landroid/os/IBinder;Ljava/lang/String;)",
   "Landroid/hardware/face/IFaceService;->prepareForAuthentication(IZLandroid/os/IBinder;JILandroid/hardware/biometrics/IBiometricSensorReceiver;Ljava/lang/String;IZ)",
   "Landroid/hardware/face/IFaceService$Default;->cancelAuthentication(Landroid/os/IBinder;Ljava/lang/String;)",
   "Landroid/hardware/face/IFaceService$Default;->cancelAuthenticationFromService(ILandroid/os/IBinder;Ljava/lang/String;)",
   "Landroid/hardware/face/IFaceService$Default;->cancelFaceDetect(Landroid/os/IBinder;Ljava/lang/String;)",
   "Landroid/hardware/face/IFaceService$Default;->prepareForAuthentication(IZLandroid/os/IBinder;JILandroid/hardware/biometrics/IBiometricSensorReceiver;Ljava/lang/String;IZ)",
   "Landroid/hardware/face/IFaceService$Stub$Proxy;->cancelAuthentication(Landroid/os/IBinder;Ljava/lang/String;)",
   "Landroid/hardware/face/IFaceService$Stub$Proxy;->cancelAuthenticationFromService(ILandroid/os/IBinder;Ljava/lang/String;)",
   "Landroid/hardware/face/IFaceService$Stub$Proxy;->cancelFaceDetect(Landroid/os/IBinder;Ljava/lang/String;)",
   "Landroid/hardware/face/IFaceService$Stub$Proxy;->prepareForAuthentication(IZLandroid/os/IBinder;JILandroid/hardware/biometrics/IBiometricSensorReceiver;Ljava/lang/String;IZ)",
   "Landroid/hardware/fingerprint/FingerprintManager$OnAuthenticationCancelListener;-><init>(Landroid/hardware/fingerprint/FingerprintManager;Landroid/hardware/biometrics/CryptoObject;)",
   "Landroid/hardware/fingerprint/FingerprintManager$OnFingerprintDetectionCancelListener;-><init>(Landroid/hardware/fingerprint/FingerprintManager;)",
   "Landroid/hardware/fingerprint/FingerprintManager$OnFingerprintDetectionCancelListener;-><init>(Landroid/hardware/fingerprint/FingerprintManager;Landroid/hardware/fingerprint/FingerprintManager$1;)",
   "Landroid/hardware/fingerprint/IFingerprintService;->authenticate(Landroid/os/IBinder;JIILandroid/hardware/fingerprint/IFingerprintServiceReceiver;Ljava/lang/String;)",
   "Landroid/hardware/fingerprint/IFingerprintService;->cancelAuthentication(Landroid/os/IBinder;Ljava/lang/String;)",
   "Landroid/hardware/fingerprint/IFingerprintService;->cancelAuthenticationFromService(ILandroid/os/IBinder;Ljava/lang/String;)",
   "Landroid/hardware/fingerprint/IFingerprintService;->cancelFingerprintDetect(Landroid/os/IBinder;Ljava/lang/String;)",
   "Landroid/hardware/fingerprint/IFingerprintService;->hasEnrolledTemplatesForAnySensor(ILjava/util/List;Ljava/lang/String;)",
   "Landroid/hardware/fingerprint/IFingerprintService;->prepareForAuthentication(ILandroid/os/IBinder;JILandroid/hardware/biometrics/IBiometricSensorReceiver;Ljava/lang/String;IZ)",
   "Landroid/hardware/fingerprint/IFingerprintService$Default;->authenticate(Landroid/os/IBinder;JIILandroid/hardware/fingerprint/IFingerprintServiceReceiver;Ljava/lang/String;)",
   "Landroid/hardware/fingerprint/IFingerprintService$Default;->cancelAuthentication(Landroid/os/IBinder;Ljava/lang/String;)",
   "Landroid/hardware/fingerprint/IFingerprintService$Default;->cancelAuthenticationFromService(ILandroid/os/IBinder;Ljava/lang/String;)",
   "Landroid/hardware/fingerprint/IFingerprintService$Default;->cancelFingerprintDetect(Landroid/os/IBinder;Ljava/lang/String;)",
   "Landroid/hardware/fingerprint/IFingerprintService$Default;->hasEnrolledTemplatesForAnySensor(ILjava/util/List;Ljava/lang/String;)",
   "Landroid/hardware/fingerprint/IFingerprintService$Default;->prepareForAuthentication(ILandroid/os/IBinder;JILandroid/hardware/biometrics/IBiometricSensorReceiver;Ljava/lang/String;IZ)",
   "Landroid/hardware/fingerprint/IFingerprintService$Stub$Proxy;->authenticate(Landroid/os/IBinder;JIILandroid/hardware/fingerprint/IFingerprintServiceReceiver;Ljava/lang/String;)",
   "Landroid/hardware/fingerprint/IFingerprintService$Stub$Proxy;->cancelAuthentication(Landroid/os/IBinder;Ljava/lang/String;)",
   "Landroid/hardware/fingerprint/IFingerprintService$Stub$Proxy;->cancelAuthenticationFromService(ILandroid/os/IBinder;Ljava/lang/String;)",
   "Landroid/hardware/fingerprint/IFingerprintService$Stub$Proxy;->cancelFingerprintDetect(Landroid/os/IBinder;Ljava/lang/String;)",
   "Landroid/hardware/fingerprint/IFingerprintService$Stub$Proxy;->hasEnrolledTemplatesForAnySensor(ILjava/util/List;Ljava/lang/String;)",
   "Landroid/hardware/fingerprint/IFingerprintService$Stub$Proxy;->prepareForAuthentication(ILandroid/os/IBinder;JILandroid/hardware/biometrics/IBiometricSensorReceiver;Ljava/lang/String;IZ)",
   "Landroid/hardware/fingerprint/ISidefpsController;->hide()",
   "Landroid/hardware/fingerprint/ISidefpsController;->show()",
   "Landroid/hardware/fingerprint/ISidefpsController$Default;->hide()",
   "Landroid/hardware/fingerprint/ISidefpsController$Default;->show()",
   "Landroid/hardware/fingerprint/ISidefpsController$Stub$Proxy;->hide()",
   "Landroid/hardware/fingerprint/ISidefpsController$Stub$Proxy;->show()",
   "Landroid/media/projection/MediaProjection;->createVirtualDisplay(Landroid/hardware/display/VirtualDisplayConfig;Landroid/hardware/display/VirtualDisplay$Callback;Landroid/os/Handler;)",
   "Landroid/os/SharedMemory$Closer;-><init>(Ljava/io/FileDescriptor;Landroid/os/SharedMemory$MemoryRegistration;Landroid/os/SharedMemory$1;)",
   "Landroid/view/IRecentsAnimationRunner;->onAnimationCanceled(Landroid/window/TaskSnapshot;)",
   "Landroid/view/IRecentsAnimationRunner;->onTaskAppeared(Landroid/view/RemoteAnimationTarget;)",
   "Landroid/view/IRecentsAnimationRunner$Default;->onAnimationCanceled(Landroid/window/TaskSnapshot;)",
   "Landroid/view/IRecentsAnimationRunner$Default;->onTaskAppeared(Landroid/view/RemoteAnimationTarget;)",
   "Landroid/view/IRecentsAnimationRunner$Stub$Proxy;->onAnimationCanceled(Landroid/window/TaskSnapshot;)",
   "Landroid/view/IRecentsAnimationRunner$Stub$Proxy;->onTaskAppeared(Landroid/view/RemoteAnimationTarget;)",
   "Landroid/view/IWindowManager;->modifyDisplayWindowInsets(ILandroid/view/InsetsState;)",
   "Landroid/view/IWindowManager$Default;->modifyDisplayWindowInsets(ILandroid/view/InsetsState;)",
   "Landroid/view/IWindowManager$Stub$Proxy;->modifyDisplayWindowInsets(ILandroid/view/InsetsState;)",
   "Landroid/view/IWindowSession;->addToDisplay(Landroid/view/IWindow;Landroid/view/WindowManager$LayoutParams;IILandroid/view/InsetsState;Landroid/view/InputChannel;Landroid/view/InsetsState;[Landroid/view/InsetsSourceControl;)",
   "Landroid/view/IWindowSession;->addToDisplayAsUser(Landroid/view/IWindow;Landroid/view/WindowManager$LayoutParams;IIILandroid/view/InsetsState;Landroid/view/InputChannel;Landroid/view/InsetsState;[Landroid/view/InsetsSourceControl;)",
   "Landroid/view/IWindowSession;->insetsModified(Landroid/view/IWindow;Landroid/view/InsetsState;)",
   "Landroid/view/IWindowSession$Default;->addToDisplay(Landroid/view/IWindow;Landroid/view/WindowManager$LayoutParams;IILandroid/view/InsetsState;Landroid/view/InputChannel;Landroid/view/InsetsState;[Landroid/view/InsetsSourceControl;)",
   "Landroid/view/IWindowSession$Default;->addToDisplayAsUser(Landroid/view/IWindow;Landroid/view/WindowManager$LayoutParams;IIILandroid/view/InsetsState;Landroid/view/InputChannel;Landroid/view/InsetsState;[Landroid/view/InsetsSourceControl;)",
   "Landroid/view/IWindowSession$Default;->insetsModified(Landroid/view/IWindow;Landroid/view/InsetsState;)",
   "Landroid/view/IWindowSession$Stub$Proxy;->addToDisplay(Landroid/view/IWindow;Landroid/view/WindowManager$LayoutParams;IILandroid/view/InsetsState;Landroid/view/InputChannel;Landroid/view/InsetsState;[Landroid/view/InsetsSourceControl;)",
   "Landroid/view/IWindowSession$Stub$Proxy;->addToDisplayAsUser(Landroid/view/IWindow;Landroid/view/WindowManager$LayoutParams;IIILandroid/view/InsetsState;Landroid/view/InputChannel;Landroid/view/InsetsState;[Landroid/view/InsetsSourceControl;)",
   "Landroid/view/IWindowSession$Stub$Proxy;->insetsModified(Landroid/view/IWindow;Landroid/view/InsetsState;)",
   "Landroid/view/WindowlessWindowManager;->insetsModified(Landroid/view/IWindow;Landroid/view/InsetsState;)",
   "Landroid/widget/RemoteViews;-><init>(Landroid/os/Parcel;Landroid/widget/RemoteViews$BitmapCache;Landroid/content/pm/ApplicationInfo;ILjava/util/Map;Landroid/widget/RemoteViews$1;)",
   "Landroid/widget/RemoteViews$ViewGroupActionAdd;-><init>(Landroid/widget/RemoteViews;Landroid/os/Parcel;Landroid/widget/RemoteViews$BitmapCache;Landroid/content/pm/ApplicationInfo;ILjava/util/Map;)",
   "Landroid/window/IRemoteTransitionFinishedCallback;->onTransitionFinished(Landroid/window/WindowContainerTransaction;)",
   "Landroid/window/IRemoteTransitionFinishedCallback$Default;->onTransitionFinished(Landroid/window/WindowContainerTransaction;)",
   "Landroid/window/IRemoteTransitionFinishedCallback$Stub$Proxy;->onTransitionFinished(Landroid/window/WindowContainerTransaction;)",
   "Landroid/window/ITaskOrganizer;->removeStartingWindow(ILandroid/view/SurfaceControl;Landroid/graphics/Rect;Z)",
   "Landroid/window/ITaskOrganizer$Default;->removeStartingWindow(ILandroid/view/SurfaceControl;Landroid/graphics/Rect;Z)",
   "Landroid/window/ITaskOrganizer$Stub$Proxy;->removeStartingWindow(ILandroid/view/SurfaceControl;Landroid/graphics/Rect;Z)",
   "Lcom/android/ims/rcs/uce/presence/publish/DeviceCapabilityListener;-><init>(Landroid/content/Context;ILcom/android/ims/rcs/uce/presence/publish/DeviceCapabilityInfo;Lcom/android/ims/rcs/uce/presence/publish/PublishController$PublishControllerCallback;)",
   "Lcom/android/ims/rcs/uce/presence/publish/PublishControllerImpl;-><init>(Landroid/content/Context;ILcom/android/ims/rcs/uce/UceController$UceControllerCallback;Landroid/os/Looper;Lcom/android/ims/rcs/uce/presence/publish/PublishControllerImpl$DeviceCapListenerFactory;Lcom/android/ims/rcs/uce/presence/publish/PublishControllerImpl$PublishProcessorFactory;)",
   "Lcom/android/ims/rcs/uce/presence/publish/PublishControllerImpl$DeviceCapListenerFactory;->createDeviceCapListener(Landroid/content/Context;ILcom/android/ims/rcs/uce/presence/publish/DeviceCapabilityInfo;Lcom/android/ims/rcs/uce/presence/publish/PublishController$PublishControllerCallback;)",
   "Lcom/android/ims/rcs/uce/request/OptionsRequestCoordinator;-><init>(ILjava/util/Collection;Lcom/android/ims/rcs/uce/request/UceRequestManager$RequestManagerCallback;)",
   "Lcom/android/ims/rcs/uce/request/OptionsRequestCoordinator;-><init>(ILjava/util/Collection;Lcom/android/ims/rcs/uce/request/UceRequestManager$RequestManagerCallback;Lcom/android/ims/rcs/uce/request/OptionsRequestCoordinator$1;)",
   "Lcom/android/ims/rcs/uce/request/RemoteOptionsCoordinator;-><init>(ILjava/util/Collection;Lcom/android/ims/rcs/uce/request/UceRequestManager$RequestManagerCallback;)",
   "Lcom/android/ims/rcs/uce/request/RemoteOptionsCoordinator;-><init>(ILjava/util/Collection;Lcom/android/ims/rcs/uce/request/UceRequestManager$RequestManagerCallback;Lcom/android/ims/rcs/uce/request/RemoteOptionsCoordinator$1;)",
   "Lcom/android/ims/rcs/uce/request/SubscribeRequestCoordinator;-><init>(ILjava/util/Collection;Lcom/android/ims/rcs/uce/request/UceRequestManager$RequestManagerCallback;)",
   "Lcom/android/ims/rcs/uce/request/SubscribeRequestCoordinator;-><init>(ILjava/util/Collection;Lcom/android/ims/rcs/uce/request/UceRequestManager$RequestManagerCallback;Lcom/android/ims/rcs/uce/request/SubscribeRequestCoordinator$1;)",
   "Lcom/android/internal/jank/InteractionJankMonitor$Configuration;-><init>(ILandroid/view/View;Ljava/lang/String;JLcom/android/internal/jank/InteractionJankMonitor$1;)",
   "Lcom/android/internal/policy/IKeyguardStateCallback$Default;->onHasLockscreenWallpaperChanged(Z)",
   "Lcom/android/internal/policy/IKeyguardStateCallback$Default;->onShowingStateChanged(Z)",
   "Lcom/android/internal/policy/IKeyguardStateCallback$Stub$Proxy;->onHasLockscreenWallpaperChanged(Z)",
   "Lcom/android/internal/policy/IKeyguardStateCallback$Stub$Proxy;->onShowingStateChanged(Z)",
   "Lcom/android/internal/statusbar/IStatusBar;->onSystemBarAttributesChanged(II[Lcom/android/internal/view/AppearanceRegion;ZIZ)",
   "Lcom/android/internal/statusbar/IStatusBar;->showAuthenticationDialog(Landroid/hardware/biometrics/PromptInfo;Landroid/hardware/biometrics/IBiometricSysuiReceiver;[IZZILjava/lang/String;JI)",
   "Lcom/android/internal/statusbar/IStatusBar;->showTransient(I[I)",
   "Lcom/android/internal/statusbar/IStatusBar$Default;->onSystemBarAttributesChanged(II[Lcom/android/internal/view/AppearanceRegion;ZIZ)",
   "Lcom/android/internal/statusbar/IStatusBar$Default;->showAuthenticationDialog(Landroid/hardware/biometrics/PromptInfo;Landroid/hardware/biometrics/IBiometricSysuiReceiver;[IZZILjava/lang/String;JI)",
   "Lcom/android/internal/statusbar/IStatusBar$Default;->showTransient(I[I)",
   "Lcom/android/internal/statusbar/IStatusBar$Stub$Proxy;->onSystemBarAttributesChanged(II[Lcom/android/internal/view/AppearanceRegion;ZIZ)",
   "Lcom/android/internal/statusbar/IStatusBar$Stub$Proxy;->showAuthenticationDialog(Landroid/hardware/biometrics/PromptInfo;Landroid/hardware/biometrics/IBiometricSysuiReceiver;[IZZILjava/lang/String;JI)",
   "Lcom/android/internal/statusbar/IStatusBar$Stub$Proxy;->showTransient(I[I)",
   "Lcom/android/internal/statusbar/IStatusBarService;->showAuthenticationDialog(Landroid/hardware/biometrics/PromptInfo;Landroid/hardware/biometrics/IBiometricSysuiReceiver;[IZZILjava/lang/String;JI)",
   "Lcom/android/internal/statusbar/IStatusBarService$Default;->showAuthenticationDialog(Landroid/hardware/biometrics/PromptInfo;Landroid/hardware/biometrics/IBiometricSysuiReceiver;[IZZILjava/lang/String;JI)",
   "Lcom/android/internal/statusbar/IStatusBarService$Stub$Proxy;->showAuthenticationDialog(Landroid/hardware/biometrics/PromptInfo;Landroid/hardware/biometrics/IBiometricSysuiReceiver;[IZZILjava/lang/String;JI)",
   "Lcom/android/internal/telephony/CarrierResolver;->handleSimLoaded()",
   "Lcom/android/internal/telephony/CarrierResolver;->loadCarrierMatchingRulesOnMccMnc(Z)",
   "Lcom/android/internal/telephony/CarrierResolver;->matchSubscriptionCarrier(Z)",
   "Lcom/android/internal/telephony/CarrierResolver;->updateCarrierIdAndName(ILjava/lang/String;ILjava/lang/String;I)",
   "Lcom/android/internal/telephony/GbaManager;-><init>(Landroid/content/Context;ILjava/lang/String;I)",
   "Lcom/android/internal/telephony/NetworkTypeController;->isNrAdvancedCapable()",
   "Lcom/android/internal/telephony/NetworkTypeController$NrConnectedState;->handlePcoData(Landroid/os/AsyncResult;)",
   "Lcom/android/internal/telephony/Phone;->setPreferredNetworkTypeIfSimLoaded()",
   "Lcom/android/internal/telephony/dataconnection/AccessNetworksManager;->dump(Ljava/io/FileDescriptor;Lcom/android/internal/telephony/AndroidUtilIndentingPrintWriter;[Ljava/lang/String;)",
   "Lcom/android/internal/telephony/dataconnection/DataConnection;-><init>(Lcom/android/internal/telephony/Phone;Ljava/lang/String;ILcom/android/internal/telephony/dataconnection/DcTracker;Lcom/android/internal/telephony/dataconnection/DataServiceManager;Lcom/android/internal/telephony/dataconnection/DcTesterFailBringUpAll;Lcom/android/internal/telephony/dataconnection/DcController;Z)",
   "Lcom/android/internal/telephony/dataconnection/DataConnection;->getDoAllocatePduSessionId()",
   "Lcom/android/internal/telephony/dataconnection/DataConnection;->makeDataConnection(Lcom/android/internal/telephony/Phone;ILcom/android/internal/telephony/dataconnection/DcTracker;Lcom/android/internal/telephony/dataconnection/DataServiceManager;Lcom/android/internal/telephony/dataconnection/DcTesterFailBringUpAll;Lcom/android/internal/telephony/dataconnection/DcController;Z)",
   "Lcom/android/internal/telephony/dataconnection/QosCallbackTracker;-><init>(Lcom/android/internal/telephony/dataconnection/DcNetworkAgent;)",
   "Lcom/android/internal/telephony/dataconnection/TransportManager;->areNetworksValid(Lcom/android/internal/telephony/dataconnection/AccessNetworksManager$QualifiedNetworks;)",
   "Lcom/android/internal/telephony/dataconnection/TransportManager;->isAnyApnPreferredOnIwlan()",
   "Lcom/android/internal/telephony/dataconnection/TransportManager;->isHandoverNeeded(Lcom/android/internal/telephony/dataconnection/AccessNetworksManager$QualifiedNetworks;)",
   "Lcom/android/internal/telephony/dataconnection/TransportManager;->updateAvailableNetworks()",
   "Lcom/android/internal/telephony/metrics/ServiceStateStats;->getBand(Landroid/telephony/ServiceState;I)",
   "Lcom/android/internal/telephony/metrics/ServiceStateStats;->getBand(Lcom/android/internal/telephony/Phone;I)",
   "Lcom/android/internal/telephony/metrics/VoiceCallSessionStats;->getRat(Landroid/telephony/ServiceState;)",
   "Lcom/android/internal/telephony/uicc/PinStorage;->prepareUnattendedReboot()",
   "Lcom/android/internal/telephony/uicc/UiccController;->eidIsNotSupported(Lcom/android/internal/telephony/uicc/IccCardStatus;)",
   "Lcom/android/internal/view/IInputMethod;->initializeInternal(Landroid/os/IBinder;ILcom/android/internal/inputmethod/IInputMethodPrivilegedOperations;I)",
   "Lcom/android/internal/view/IInputMethod$Default;->initializeInternal(Landroid/os/IBinder;ILcom/android/internal/inputmethod/IInputMethodPrivilegedOperations;I)",
   "Lcom/android/internal/view/IInputMethod$Stub$Proxy;->initializeInternal(Landroid/os/IBinder;ILcom/android/internal/inputmethod/IInputMethodPrivilegedOperations;I)"
  ],
  "removed": [
   "Landroid/accessibilityservice/AccessibilityService;->setDefaultTokenInternal(Landroid/content/Context;I)",
   "Landroid/app/Activity;->getSplashScreenView()",
   "Landroid/app/Activity;->setSplashScreenView(Landroid/window/SplashScreenView;)",
   "Landroid/app/ActivityOptions;->makeRemoteAnimation(Landroid/view/RemoteAnimationAdapter;Landroid/window/IRemoteTransition;)",
   "Landroid/app/ActivityOptions;->makeRemoteTransition(Landroid/window/IRemoteTransition;)",
   "Landroid/app/ActivityThread;->createSplashScreen(Landroid/app/ActivityThread$ActivityClientRecord;Lcom/android/internal/policy/DecorView;Landroid/window/SplashScreenView$SplashScreenViewParcelable;)",
   "Landroid/app/ActivityThread;->createSystemUiContext(I)",
   "Landroid/app/ActivityThread;->handOverSplashScreenView(Landroid/app/ActivityThread$ActivityClientRecord;)",
   "Landroid/app/ActivityThread;->handleAttachSplashScreenView(Landroid/app/ActivityThread$ActivityClientRecord;Landroid/window/SplashScreenView$SplashScreenViewParcelable;)",
   "Landroid/app/ActivityThread;->hasImeComponent()",
   "Landroid/app/ActivityThread;->isDifferentDisplay(Landroid/app/Activity;I)",
   "Landroid/app/ActivityThread;->shouldUpdateWindowMetricsBounds(Landroid/content/res/Configuration;Landroid/content/res/Configuration;)",
   "Landroid/app/ActivityThread;->throwRemoteServiceException(Ljava/lang/String;I)",
   "Landroid/app/ActivityThread$ApplicationThread;->scheduleCrash(Ljava/lang/String;I)",
   "Landroid/app/ActivityThread$ProviderKey;->hashCode(Ljava/lang/String;I)",
   "Landroid/app/ActivityThreadInternal;->getSystemUiContext()",
   "Landroid/app/ActivityThreadInternal;->hasImeComponent()",
   "Landroid/app/ClientTransactionHandler;->handOverSplashScreenView(Landroid/app/ActivityThread$ActivityClientRecord;)",
   "Landroid/app/ClientTransactionHandler;->handleAttachSplashScreenView(Landroid/app/ActivityThread$ActivityClientRecord;Landroid/window/SplashScreenView$SplashScreenViewParcelable;)",
   "Landroid/app/ConfigurationController;->freeTextLayoutCachesIfNeeded(I)",
   "Landroid/app/ContextImpl;->createSystemUiContext(Landroid/app/ContextImpl;)",
   "Landroid/app/ContextImpl;->createWindowContextBase(Landroid/os/IBinder;Landroid/view/Display;)",
   "Landroid/app/ForegroundServiceDidNotStartInTimeException;-><init>(Ljava/lang/String;)",
   "Landroid/app/Notification;->hasMediaSession()",
   "Landroid/app/Notification$Builder;->ensureColorSpanContrast(Ljava/lang/CharSequence;I[Landroid/content/res/ColorStateList;)",
   "Landroid/app/NotificationChannel;->isSoundMissing()",
   "Landroid/app/servertransaction/TransferSplashScreenViewStateItem;->obtain(ILandroid/window/SplashScreenView$SplashScreenViewParcelable;)",
   "Landroid/appwidget/AppWidgetHostView;->getRemoteContext()",
   "Landroid/content/pm/ActivityInfo;->alwaysSandboxDisplayApis()",
   "Landroid/content/pm/ActivityInfo;->getMinAspectRatio()",
   "Landroid/content/pm/ActivityInfo;->hasFixedAspectRatio()",
   "Landroid/content/pm/ActivityInfo;->neverSandboxDisplayApis()",
   "Landroid/content/pm/ConstrainDisplayApisConfig;->alwaysConstrainDisplayApis(Landroid/content/pm/ApplicationInfo;)",
   "Landroid/content/pm/ConstrainDisplayApisConfig;->flagHasMatchingPackageEntry(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;)",
   "Landroid/content/pm/ConstrainDisplayApisConfig;->matchesApplicationInfo(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;)",
   "Landroid/content/pm/ConstrainDisplayApisConfig;->neverConstrainDisplayApis(Landroid/content/pm/ApplicationInfo;)",
   "Landroid/graphics/BLASTBufferQueue;->flushShadowQueue()",
   "Landroid/graphics/BLASTBufferQueue;->nativeCreate(Ljava/lang/String;JJJI)",
   "Landroid/graphics/BLASTBufferQueue;->nativeFlushShadowQueue(J)",
   "Landroid/graphics/HardwareRenderer$FrameCompleteCallback;->onFrameComplete(J)",
   "Landroid/hardware/biometrics/BiometricPrompt;->cancelAuthentication()",
   "Landroid/hardware/devicestate/DeviceStateManagerGlobal;->requestState(Landroid/hardware/devicestate/DeviceStateRequest;Landroid/hardware/devicestate/DeviceStateRequest$Callback;Ljava/util/concurrent/Executor;)",
   "Landroid/hardware/display/AmbientDisplayConfiguration;->tapSensorType()",
   "Landroid/hardware/display/BrightnessInfo;-><init>(FFFI)",
   "Landroid/hardware/display/DisplayManager;->createVirtualDisplay(Landroid/media/projection/MediaProjection;Landroid/hardware/display/VirtualDisplayConfig;Landroid/hardware/display/VirtualDisplay$Callback;Landroid/os/Handler;)",
   "Landroid/hardware/display/DisplayManagerGlobal;->createVirtualDisplay(Landroid/content/Context;Landroid/media/projection/MediaProjection;Landroid/hardware/display/VirtualDisplayConfig;Landroid/hardware/display/VirtualDisplay$Callback;Landroid/os/Handler;)",
   "Landroid/hardware/display/VirtualDisplay;-><init>(Landroid/hardware/display/DisplayManagerGlobal;Landroid/view/Display;Landroid/hardware/display/IVirtualDisplayCallback;Landroid/view/Surface;)",
   "Landroid/hardware/display/VirtualDisplayConfig;-><init>(Ljava/lang/String;IIIILandroid/view/Surface;Ljava/lang/String;I)",
   "Landroid/hardware/face/FaceManager;->cancelAuthentication(Landroid/hardware/biometrics/CryptoObject;)",
   "Landroid/hardware/face/FaceManager;->cancelFaceDetect()",
   "Landroid/hardware/fingerprint/FingerprintManager;->authenticate(Landroid/hardware/fingerprint/FingerprintManager$CryptoObject;Landroid/os/CancellationSignal;Landroid/hardware/fingerprint/FingerprintManager$AuthenticationCallback;Landroid/os/Handler;II)",
   "Landroid/hardware/fingerprint/FingerprintManager;->cancelAuthentication(Landroid/hardware/biometrics/CryptoObject;)",
   "Landroid/hardware/fingerprint/FingerprintManager;->cancelFingerprintDetect()",
   "Landroid/hardware/fingerprint/FingerprintManager;->hasEnrolledTemplatesForAnySensor(ILjava/util/List;)",
   "Landroid/hardware/fingerprint/FingerprintSensorPropertiesInternal;-><init>(IIILjava/util/List;IZIII)",
   "Landroid/inputmethodservice/IInputMethodWrapper;->initializeInternal(Landroid/os/IBinder;ILcom/android/internal/inputmethod/IInputMethodPrivilegedOperations;I)",
   "Landroid/inputmethodservice/InputMethodService$InputMethodImpl;->initializeInternal(Landroid/os/IBinder;ILcom/android/internal/inputmethod/IInputMethodPrivilegedOperations;I)",
   "Landroid/inputmethodservice/InputMethodService$InputMethodImpl;->updateInputMethodDisplay(I)",
   "Landroid/net/NetworkTemplate;->buildTemplateMobileWithRatType(Ljava/lang/String;I)",
   "Landroid/net/NetworkTemplate;->forceAllNetworkTypes()",
   "Landroid/net/NetworkTemplate;->resetForceAllNetworkTypes()",
   "Landroid/os/AppZygote;-><init>(Landroid/content/pm/ApplicationInfo;III)",
   "Landroid/os/GraphicsEnvironment;->checkAngleAllowlist(Landroid/content/Context;Landroid/os/Bundle;Ljava/lang/String;)",
   "Landroid/os/GraphicsEnvironment;->setAngleInfo(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/io/FileDescriptor;JJ)",
   "Landroid/os/GraphicsEnvironment;->setupAngleRulesApk(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;Landroid/content/pm/PackageManager;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)",
   "Landroid/os/GraphicsEnvironment;->setupAngleWithTempRulesFile(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)",
   "Landroid/os/SharedMemory$Closer;-><init>(Ljava/io/FileDescriptor;Landroid/os/SharedMemory$MemoryRegistration;)",
   "Landroid/permission/PermissionUsageHelper;->getUniqueUsagesWithLabels(Ljava/util/List;)",
   "Landroid/service/notification/NotificationListenerService$Ranking;->visuallyInterruptive()",
   "Landroid/service/wallpaper/EngineWindowPage;->execSync(Ljava/util/function/Consumer;)",
   "Landroid/service/wallpaper/WallpaperService$Engine;->getLocalWallpaperColors(Ljava/util/List;)",
   "Landroid/speech/RecognitionService;->checkPermissionForPreflight(Landroid/content/AttributionSource;)",
   "Landroid/text/style/StyleSpan;->apply(Landroid/graphics/Paint;I)",
   "Landroid/view/DisplayCutout;->fromResourcesRectApproximation(Landroid/content/res/Resources;II)",
   "Landroid/view/DisplayCutout;->pathFromResources(Landroid/content/res/Resources;II)",
   "Landroid/view/InsetsAnimationControlCallbacks;->startAnimation(Landroid/view/InsetsAnimationControlImpl;Landroid/view/WindowInsetsAnimationControlListener;ILandroid/view/WindowInsetsAnimation;Landroid/view/WindowInsetsAnimation$Bounds;)",
   "Landroid/view/InsetsController;->getRequestedVisibility()",
   "Landroid/view/InsetsController;->startAnimation(Landroid/view/InsetsAnimationControlImpl;Landroid/view/WindowInsetsAnimationControlListener;ILandroid/view/WindowInsetsAnimation;Landroid/view/WindowInsetsAnimation$Bounds;)",
   "Landroid/view/InsetsController;->updateRequestedVisibility()",
   "Landroid/view/InsetsController$Host;->onInsetsModified(Landroid/view/InsetsState;)",
   "Landroid/view/InsetsState;->toSourceVisibilityString()",
   "Landroid/view/RemoteAnimationTarget;-><init>(IILandroid/view/SurfaceControl;ZLandroid/graphics/Rect;Landroid/graphics/Rect;ILandroid/graphics/Point;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/app/WindowConfiguration;ZLandroid/view/SurfaceControl;Landroid/graphics/Rect;Landroid/app/ActivityManager$RunningTaskInfo;)",
   "Landroid/view/RemoteAnimationTarget;-><init>(IILandroid/view/SurfaceControl;ZLandroid/graphics/Rect;Landroid/graphics/Rect;ILandroid/graphics/Point;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/app/WindowConfiguration;ZLandroid/view/SurfaceControl;Landroid/graphics/Rect;Landroid/app/ActivityManager$RunningTaskInfo;I)",
   "Landroid/view/RoundedCorners;->fromResources(Landroid/content/res/Resources;II)",
   "Landroid/view/RoundedCorners;->loadRoundedCornerRadii(Landroid/content/res/Resources;)",
   "Landroid/view/ScrollCaptureResponse;-><init>(Ljava/lang/String;Landroid/view/IScrollCaptureConnection;Landroid/graphics/Rect;Landroid/graphics/Rect;Ljava/lang/String;Ljava/util/ArrayList;)",
   "Landroid/view/SurfaceView;->createBlastSurfaceControls(Landroid/view/ViewRootImpl;Ljava/lang/String;)",
   "Landroid/view/SurfaceView;->performSurfaceTransaction(Landroid/view/ViewRootImpl;Landroid/content/res/CompatibilityInfo$Translator;ZZZ)",
   "Landroid/view/ViewRootImpl;->addFrameCompleteCallbackIfNeeded()",
   "Landroid/view/ViewRootImpl;->createFrameCompleteCallback(Landroid/os/Handler;ZLjava/util/ArrayList;)",
   "Landroid/view/ViewRootImpl;->getSurfaceTransformHint()",
   "Landroid/view/ViewRootImpl;->updateOpacity(Landroid/view/WindowManager$LayoutParams;Z)",
   "Landroid/view/ViewRootInsetsControllerHost;->onInsetsModified(Landroid/view/InsetsState;)",
   "Landroid/view/WindowlessWindowManager;->addToDisplay(Landroid/view/IWindow;Landroid/view/WindowManager$LayoutParams;IILandroid/view/InsetsState;Landroid/view/InputChannel;Landroid/view/InsetsState;[Landroid/view/InsetsSourceControl;)",
   "Landroid/view/WindowlessWindowManager;->addToDisplayAsUser(Landroid/view/IWindow;Landroid/view/WindowManager$LayoutParams;IIILandroid/view/InsetsState;Landroid/view/InputChannel;Landroid/view/InsetsState;[Landroid/view/InsetsSourceControl;)",
   "Landroid/view/accessibility/AccessibilityInteractionClient;->logTrace(Landroid/accessibilityservice/IAccessibilityServiceConnection;Ljava/lang/String;Ljava/lang/String;)",
   "Landroid/view/accessibility/AccessibilityInteractionClient;->logTrace(Landroid/accessibilityservice/IAccessibilityServiceConnection;Ljava/lang/String;Ljava/lang/String;I)",
   "Landroid/view/accessibility/AccessibilityManager;->isAccessibilityTracingEnabled()",
   "Landroid/view/accessibility/AccessibilityManager;->updateAccessibilityTracingState(Z)",
   "Landroid/view/contentcapture/ContentCaptureContext;-><init>(Landroid/view/contentcapture/ContentCaptureContext;Landroid/app/assist/ActivityId;Landroid/content/ComponentName;II)",
   "Landroid/view/inputmethod/InputMethod;->initializeInternal(Landroid/os/IBinder;ILcom/android/internal/inputmethod/IInputMethodPrivilegedOperations;I)",
   "Landroid/view/inputmethod/InputMethod;->updateInputMethodDisplay(I)",
   "Landroid/widget/AbsListView;->invalidateBottomGlow()",
   "Landroid/widget/AbsListView;->invalidateTopGlow()",
   "Landroid/widget/AbsListView;->isGlowActive()",
   "Landroid/widget/RemoteViews;-><init>(Landroid/os/Parcel;Landroid/widget/RemoteViews$BitmapCache;Landroid/content/pm/ApplicationInfo;ILjava/util/Map;)",
   "Landroid/widget/RemoteViews;->configureRemoteViewsAsChild(Landroid/widget/RemoteViews;)",
   "Landroid/widget/RemoteViews;->getContextForResources(Landroid/content/Context;)",
   "Landroid/widget/RemoteViews;->initializeFrom(Landroid/widget/RemoteViews;)",
   "Landroid/widget/RemoteViews;->setBitmapCache(Landroid/widget/RemoteViews$BitmapCache;)",
   "Landroid/widget/RemoteViews;->setNotRoot()",
   "Landroid/widget/RemoteViews;->writeActionsToParcel(Landroid/os/Parcel;)",
   "Landroid/widget/RemoteViews$Action;->hasSameAppInfo(Landroid/content/pm/ApplicationInfo;)",
   "Landroid/widget/RemoteViews$Action;->setBitmapCache(Landroid/widget/RemoteViews$BitmapCache;)",
   "Landroid/widget/RemoteViews$BitmapReflectionAction;->setBitmapCache(Landroid/widget/RemoteViews$BitmapCache;)",
   "Landroid/widget/RemoteViews$RemoteCollectionItems;-><init>(Landroid/os/Parcel;)",
   "Landroid/widget/RemoteViews$ViewGroupActionAdd;->hasSameAppInfo(Landroid/content/pm/ApplicationInfo;)",
   "Landroid/widget/RemoteViews$ViewGroupActionAdd;->setBitmapCache(Landroid/widget/RemoteViews$BitmapCache;)",
   "Landroid/widget/RemoteViewsAdapter$RemoteViewsFrameLayout;->getRemoteContext()",
   "Landroid/window/PictureInPictureSurfaceTransaction;-><init>(FF[FFFLandroid/graphics/Rect;)",
   "Landroid/window/SizeConfigurationBuckets;-><init>([I[I[I)",
   "Landroid/window/SplashScreen$SplashScreenManagerGlobal;->transferSurface(Landroid/window/SplashScreenView;)",
   "Landroid/window/SplashScreenView;->transferSurface()",
   "Landroid/window/TaskOrganizer;->removeStartingWindow(ILandroid/view/SurfaceControl;Landroid/graphics/Rect;Z)",
   "Landroid/window/TaskSnapshot;-><init>(JLandroid/content/ComponentName;Landroid/hardware/HardwareBuffer;Landroid/graphics/ColorSpace;IILandroid/graphics/Point;Landroid/graphics/Rect;ZZIIZZ)",
   "Landroid/window/TransitionRequestInfo;-><init>(ILandroid/app/ActivityManager$RunningTaskInfo;Landroid/window/IRemoteTransition;)",
   "Landroid/window/TransitionRequestInfo;->setRemoteTransition(Landroid/window/IRemoteTransition;)",
   "Landroid/window/WindowContainerTransaction;->setAdjacentRoots(Landroid/window/WindowContainerToken;Landroid/window/WindowContainerToken;)",
   "Landroid/window/WindowContainerTransaction$HierarchyOp;-><init>(ILandroid/os/IBinder;Landroid/os/IBinder;[I[IZLandroid/os/Bundle;)",
   "Landroid/window/WindowContainerTransaction$HierarchyOp;->createForAdjacentRoots(Landroid/os/IBinder;Landroid/os/IBinder;)",
   "Landroid/window/WindowContainerTransaction$HierarchyOp;->createForChildrenTasksReparent(Landroid/os/IBinder;Landroid/os/IBinder;[I[IZ)",
   "Landroid/window/WindowContextController;-><init>(Landroid/os/IBinder;)",
   "Landroid/window/WindowContextController;-><init>(Landroid/os/IBinder;Landroid/view/IWindowManager;)",
   "Landroid/window/WindowProviderService;->onCreate()",
   "Lcom/android/internal/accessibility/util/AccessibilityStatsLogUtils;->isFloatingMenuEnabled(Landroid/content/Context;)",
   "Lcom/android/internal/app/ChooserActivity;->getMaxTargetsPerRow()",
   "Lcom/android/internal/jank/FrameTracker;-><init>(Lcom/android/internal/jank/InteractionJankMonitor$Session;Landroid/os/Handler;Lcom/android/internal/jank/FrameTracker$ThreadedRendererWrapper;Lcom/android/internal/jank/FrameTracker$ViewRootWrapper;Lcom/android/internal/jank/FrameTracker$SurfaceControlWrapper;Lcom/android/internal/jank/FrameTracker$ChoreographerWrapper;Lcom/android/internal/jank/FrameTracker$FrameMetricsWrapper;IILcom/android/internal/jank/FrameTracker$FrameTrackerListener;)",
   "Lcom/android/internal/jank/InteractionJankMonitor$Configuration;-><init>(ILandroid/view/View;Ljava/lang/String;J)",
   "Lcom/android/internal/notification/NotificationAccessConfirmationActivityContract;->launcherIntent(ILandroid/content/ComponentName;Ljava/lang/String;)",
   "Lcom/android/internal/os/BatteryStatsImpl;->noteScreenBrightnessLocked(IJJ)",
   "Lcom/android/internal/os/BatteryStatsImpl;->noteScreenStateLocked(I)",
   "Lcom/android/internal/os/BatteryStatsImpl;->noteScreenStateLocked(IJJJ)",
   "Lcom/android/internal/os/BatteryStatsImpl;->removeIsolatedUidLocked(IJJ)",
   "Lcom/android/internal/os/BatteryStatsImpl;->updateDisplayMeasuredEnergyStatsLocked(JIJ)",
   "Lcom/android/internal/os/BatteryStatsImpl$ExternalStatsSync;->scheduleSyncDueToScreenStateChange(IZZI)",
   "Lcom/android/internal/os/BatteryStatsImpl$Uid;->reset(JJ)",
   "Lcom/android/internal/os/PowerCalculator;->getMeasuredOrEstimatedPower(IJLcom/android/internal/os/UsageBasedPowerEstimator;J)",
   "Lcom/android/internal/os/PowerCalculator;->getMeasuredOrEstimatedPower(JLcom/android/internal/os/UsageBasedPowerEstimator;J)",
   "Lcom/android/internal/os/ScreenPowerCalculator;->calculateTotalPowerFromBrightness(Landroid/os/BatteryStats;JIJ)",
   "Lcom/android/internal/policy/DecorView;->updateAvailableWidth()",
   "Lcom/android/internal/policy/IKeyguardStateCallback;->onHasLockscreenWallpaperChanged(Z)",
   "Lcom/android/internal/policy/PhoneFallbackEventHandler;->sendCloseSystemWindows()",
   "Lcom/android/internal/policy/ScreenDecorationsUtils;->getWindowCornerRadius(Landroid/content/res/Resources;)",
   "Lcom/android/internal/policy/TransitionAnimation;->createAspectScaledThumbnailEnterExitAnimationLocked(IIILandroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;ZLandroid/graphics/Rect;Landroid/graphics/Rect;)",
   "Lcom/android/internal/policy/TransitionAnimation;->createClipRevealAnimationLocked(IZLandroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;)",
   "Lcom/android/internal/policy/TransitionAnimation;->createScaleUpAnimationLocked(IZLandroid/graphics/Rect;Landroid/graphics/Rect;)",
   "Lcom/android/internal/policy/TransitionAnimation;->createThumbnailEnterExitAnimationLocked(ILandroid/graphics/Rect;ILandroid/hardware/HardwareBuffer;Landroid/graphics/Rect;)",
   "Lcom/android/internal/statusbar/RegisterStatusBarResult;-><init>(Landroid/util/ArrayMap;II[Lcom/android/internal/view/AppearanceRegion;IIZILandroid/os/IBinder;ZIZ[I)",
   "Lcom/android/internal/util/LatencyTracker;->getTraceNameOfAction(I)"
  ],
  "annotate_remove": [],
  "deprecated": [],
  "hidden": [],
  "other": [
   "Landroid/app/ContextImpl;->sendBroadcastMultiplePermissions(Landroid/content/Intent;[Ljava/lang/String;[Ljava/lang/String;)",
   "Landroid/content/ContextWrapper;->sendBroadcastMultiplePermissions(Landroid/content/Intent;[Ljava/lang/String;[Ljava/lang/String;)",
   "Landroid/widget/RemoteViews$SetRemoteCollectionItemListAdapterAction;-><init>(Landroid/os/Parcel;)",
   "Landroid/widget/RemoteViews$SetRemoteCollectionItemListAdapterAction;-><init>(ILandroid/widget/RemoteViews$RemoteCollectionItems;)",
   "Lcom/android/internal/policy/IKeyguardStateCallback;->onShowingStateChanged(Z)"
  ]
 }
}